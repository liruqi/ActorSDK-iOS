//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/api/updates/UpdateGroupUserKick.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreApiUpdatesUpdateGroupUserKick")
#ifdef RESTRICT_ImActorCoreApiUpdatesUpdateGroupUserKick
#define INCLUDE_ALL_ImActorCoreApiUpdatesUpdateGroupUserKick 0
#else
#define INCLUDE_ALL_ImActorCoreApiUpdatesUpdateGroupUserKick 1
#endif
#undef RESTRICT_ImActorCoreApiUpdatesUpdateGroupUserKick

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARUpdateGroupUserKick_) && (INCLUDE_ALL_ImActorCoreApiUpdatesUpdateGroupUserKick || defined(INCLUDE_ARUpdateGroupUserKick))
#define ARUpdateGroupUserKick_

#define RESTRICT_ImActorCoreNetworkParserUpdate 1
#define INCLUDE_ACUpdate 1
#include "../../../../../im/actor/core/network/parser/Update.h"

@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;

@interface ARUpdateGroupUserKick : ACUpdate

+ (jint)HEADER;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)groupId
                   withLong:(jlong)rid
                    withInt:(jint)uid
                    withInt:(jint)kickerUid
                   withLong:(jlong)date;

+ (ARUpdateGroupUserKick *)fromBytesWithByteArray:(IOSByteArray *)data;

- (jlong)getDate;

- (jint)getGroupId;

- (jint)getHeaderKey;

- (jint)getKickerUid;

- (jlong)getRid;

- (jint)getUid;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARUpdateGroupUserKick)

inline jint ARUpdateGroupUserKick_get_HEADER();
#define ARUpdateGroupUserKick_HEADER 24
J2OBJC_STATIC_FIELD_CONSTANT(ARUpdateGroupUserKick, HEADER, jint)

FOUNDATION_EXPORT ARUpdateGroupUserKick *ARUpdateGroupUserKick_fromBytesWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ARUpdateGroupUserKick_initWithInt_withLong_withInt_withInt_withLong_(ARUpdateGroupUserKick *self, jint groupId, jlong rid, jint uid, jint kickerUid, jlong date);

FOUNDATION_EXPORT ARUpdateGroupUserKick *new_ARUpdateGroupUserKick_initWithInt_withLong_withInt_withInt_withLong_(jint groupId, jlong rid, jint uid, jint kickerUid, jlong date) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARUpdateGroupUserKick *create_ARUpdateGroupUserKick_initWithInt_withLong_withInt_withInt_withLong_(jint groupId, jlong rid, jint uid, jint kickerUid, jlong date);

FOUNDATION_EXPORT void ARUpdateGroupUserKick_init(ARUpdateGroupUserKick *self);

FOUNDATION_EXPORT ARUpdateGroupUserKick *new_ARUpdateGroupUserKick_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARUpdateGroupUserKick *create_ARUpdateGroupUserKick_init();

J2OBJC_TYPE_LITERAL_HEADER(ARUpdateGroupUserKick)

@compatibility_alias ImActorCoreApiUpdatesUpdateGroupUserKick ARUpdateGroupUserKick;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreApiUpdatesUpdateGroupUserKick")
