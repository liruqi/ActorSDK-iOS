//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/api/updates/UpdateUserBlocked.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreApiUpdatesUpdateUserBlocked")
#ifdef RESTRICT_ImActorCoreApiUpdatesUpdateUserBlocked
#define INCLUDE_ALL_ImActorCoreApiUpdatesUpdateUserBlocked 0
#else
#define INCLUDE_ALL_ImActorCoreApiUpdatesUpdateUserBlocked 1
#endif
#undef RESTRICT_ImActorCoreApiUpdatesUpdateUserBlocked

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARUpdateUserBlocked_) && (INCLUDE_ALL_ImActorCoreApiUpdatesUpdateUserBlocked || defined(INCLUDE_ARUpdateUserBlocked))
#define ARUpdateUserBlocked_

#define RESTRICT_ImActorCoreNetworkParserUpdate 1
#define INCLUDE_ACUpdate 1
#include "../../../../../im/actor/core/network/parser/Update.h"

@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;

@interface ARUpdateUserBlocked : ACUpdate

+ (jint)HEADER;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)uid;

+ (ARUpdateUserBlocked *)fromBytesWithByteArray:(IOSByteArray *)data;

- (jint)getHeaderKey;

- (jint)getUid;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARUpdateUserBlocked)

inline jint ARUpdateUserBlocked_get_HEADER();
#define ARUpdateUserBlocked_HEADER 2629
J2OBJC_STATIC_FIELD_CONSTANT(ARUpdateUserBlocked, HEADER, jint)

FOUNDATION_EXPORT ARUpdateUserBlocked *ARUpdateUserBlocked_fromBytesWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ARUpdateUserBlocked_initWithInt_(ARUpdateUserBlocked *self, jint uid);

FOUNDATION_EXPORT ARUpdateUserBlocked *new_ARUpdateUserBlocked_initWithInt_(jint uid) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARUpdateUserBlocked *create_ARUpdateUserBlocked_initWithInt_(jint uid);

FOUNDATION_EXPORT void ARUpdateUserBlocked_init(ARUpdateUserBlocked *self);

FOUNDATION_EXPORT ARUpdateUserBlocked *new_ARUpdateUserBlocked_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARUpdateUserBlocked *create_ARUpdateUserBlocked_init();

J2OBJC_TYPE_LITERAL_HEADER(ARUpdateUserBlocked)

@compatibility_alias ImActorCoreApiUpdatesUpdateUserBlocked ARUpdateUserBlocked;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreApiUpdatesUpdateUserBlocked")
