//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/api/ApiTextExMarkdown.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreApiApiTextExMarkdown")
#ifdef RESTRICT_ImActorCoreApiApiTextExMarkdown
#define INCLUDE_ALL_ImActorCoreApiApiTextExMarkdown 0
#else
#define INCLUDE_ALL_ImActorCoreApiApiTextExMarkdown 1
#endif
#undef RESTRICT_ImActorCoreApiApiTextExMarkdown

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARApiTextExMarkdown_) && (INCLUDE_ALL_ImActorCoreApiApiTextExMarkdown || defined(INCLUDE_ARApiTextExMarkdown))
#define ARApiTextExMarkdown_

#define RESTRICT_ImActorCoreApiApiTextMessageEx 1
#define INCLUDE_ARApiTextMessageEx 1
#include "../../../../im/actor/core/api/ApiTextMessageEx.h"

@class ARBserValues;
@class ARBserWriter;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ARApiTextExMarkdown : ARApiTextMessageEx

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString * __nonnull)markdown;

- (jint)getHeader;

- (NSString * __nonnull)getMarkdown;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARApiTextExMarkdown)

FOUNDATION_EXPORT void ARApiTextExMarkdown_initWithNSString_(ARApiTextExMarkdown *self, NSString *markdown);

FOUNDATION_EXPORT ARApiTextExMarkdown *new_ARApiTextExMarkdown_initWithNSString_(NSString *markdown) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARApiTextExMarkdown *create_ARApiTextExMarkdown_initWithNSString_(NSString *markdown);

FOUNDATION_EXPORT void ARApiTextExMarkdown_init(ARApiTextExMarkdown *self);

FOUNDATION_EXPORT ARApiTextExMarkdown *new_ARApiTextExMarkdown_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARApiTextExMarkdown *create_ARApiTextExMarkdown_init();

J2OBJC_TYPE_LITERAL_HEADER(ARApiTextExMarkdown)

@compatibility_alias ImActorCoreApiApiTextExMarkdown ARApiTextExMarkdown;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreApiApiTextExMarkdown")
