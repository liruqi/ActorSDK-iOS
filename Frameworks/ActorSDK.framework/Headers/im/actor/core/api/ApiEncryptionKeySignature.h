//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/api/ApiEncryptionKeySignature.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreApiApiEncryptionKeySignature")
#ifdef RESTRICT_ImActorCoreApiApiEncryptionKeySignature
#define INCLUDE_ALL_ImActorCoreApiApiEncryptionKeySignature 0
#else
#define INCLUDE_ALL_ImActorCoreApiApiEncryptionKeySignature 1
#endif
#undef RESTRICT_ImActorCoreApiApiEncryptionKeySignature

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARApiEncryptionKeySignature_) && (INCLUDE_ALL_ImActorCoreApiApiEncryptionKeySignature || defined(INCLUDE_ARApiEncryptionKeySignature))
#define ARApiEncryptionKeySignature_

#define RESTRICT_ImActorRuntimeBserBserObject 1
#define INCLUDE_ARBserObject 1
#include "../../../../im/actor/runtime/bser/BserObject.h"

@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ARApiEncryptionKeySignature : ARBserObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithLong:(jlong)keyId
                withNSString:(NSString * __nonnull)signatureAlg
               withByteArray:(IOSByteArray * __nonnull)signature;

- (jlong)getKeyId;

- (IOSByteArray * __nonnull)getSignature;

- (NSString * __nonnull)getSignatureAlg;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARApiEncryptionKeySignature)

FOUNDATION_EXPORT void ARApiEncryptionKeySignature_initWithLong_withNSString_withByteArray_(ARApiEncryptionKeySignature *self, jlong keyId, NSString *signatureAlg, IOSByteArray *signature);

FOUNDATION_EXPORT ARApiEncryptionKeySignature *new_ARApiEncryptionKeySignature_initWithLong_withNSString_withByteArray_(jlong keyId, NSString *signatureAlg, IOSByteArray *signature) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARApiEncryptionKeySignature *create_ARApiEncryptionKeySignature_initWithLong_withNSString_withByteArray_(jlong keyId, NSString *signatureAlg, IOSByteArray *signature);

FOUNDATION_EXPORT void ARApiEncryptionKeySignature_init(ARApiEncryptionKeySignature *self);

FOUNDATION_EXPORT ARApiEncryptionKeySignature *new_ARApiEncryptionKeySignature_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARApiEncryptionKeySignature *create_ARApiEncryptionKeySignature_init();

J2OBJC_TYPE_LITERAL_HEADER(ARApiEncryptionKeySignature)

@compatibility_alias ImActorCoreApiApiEncryptionKeySignature ARApiEncryptionKeySignature;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreApiApiEncryptionKeySignature")
