//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/api/ApiActiveCall.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreApiApiActiveCall")
#ifdef RESTRICT_ImActorCoreApiApiActiveCall
#define INCLUDE_ALL_ImActorCoreApiApiActiveCall 0
#else
#define INCLUDE_ALL_ImActorCoreApiApiActiveCall 1
#endif
#undef RESTRICT_ImActorCoreApiApiActiveCall

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARApiActiveCall_) && (INCLUDE_ALL_ImActorCoreApiApiActiveCall || defined(INCLUDE_ARApiActiveCall))
#define ARApiActiveCall_

#define RESTRICT_ImActorRuntimeBserBserObject 1
#define INCLUDE_ARBserObject 1
#include "../../../../im/actor/runtime/bser/BserObject.h"

@class ARApiPeer;
@class ARBserValues;
@class ARBserWriter;
@protocol JavaUtilList;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ARApiActiveCall : ARBserObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithLong:(jlong)callId
               withARApiPeer:(ARApiPeer * __nonnull)peer
            withJavaUtilList:(id<JavaUtilList> __nonnull)callMembers;

- (jlong)getCallId;

- (id<JavaUtilList> __nonnull)getCallMembers;

- (ARApiPeer * __nonnull)getPeer;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARApiActiveCall)

FOUNDATION_EXPORT void ARApiActiveCall_initWithLong_withARApiPeer_withJavaUtilList_(ARApiActiveCall *self, jlong callId, ARApiPeer *peer, id<JavaUtilList> callMembers);

FOUNDATION_EXPORT ARApiActiveCall *new_ARApiActiveCall_initWithLong_withARApiPeer_withJavaUtilList_(jlong callId, ARApiPeer *peer, id<JavaUtilList> callMembers) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARApiActiveCall *create_ARApiActiveCall_initWithLong_withARApiPeer_withJavaUtilList_(jlong callId, ARApiPeer *peer, id<JavaUtilList> callMembers);

FOUNDATION_EXPORT void ARApiActiveCall_init(ARApiActiveCall *self);

FOUNDATION_EXPORT ARApiActiveCall *new_ARApiActiveCall_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARApiActiveCall *create_ARApiActiveCall_init();

J2OBJC_TYPE_LITERAL_HEADER(ARApiActiveCall)

@compatibility_alias ImActorCoreApiApiActiveCall ARApiActiveCall;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreApiApiActiveCall")
