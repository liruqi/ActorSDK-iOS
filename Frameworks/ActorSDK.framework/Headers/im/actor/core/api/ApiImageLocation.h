//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/api/ApiImageLocation.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreApiApiImageLocation")
#ifdef RESTRICT_ImActorCoreApiApiImageLocation
#define INCLUDE_ALL_ImActorCoreApiApiImageLocation 0
#else
#define INCLUDE_ALL_ImActorCoreApiApiImageLocation 1
#endif
#undef RESTRICT_ImActorCoreApiApiImageLocation

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARApiImageLocation_) && (INCLUDE_ALL_ImActorCoreApiApiImageLocation || defined(INCLUDE_ARApiImageLocation))
#define ARApiImageLocation_

#define RESTRICT_ImActorRuntimeBserBserObject 1
#define INCLUDE_ARBserObject 1
#include "../../../../im/actor/runtime/bser/BserObject.h"

@class ARApiFileLocation;
@class ARBserValues;
@class ARBserWriter;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ARApiImageLocation : ARBserObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithARApiFileLocation:(ARApiFileLocation * __nonnull)fileLocation
                                  withInt:(jint)width
                                  withInt:(jint)height
                                  withInt:(jint)fileSize;

- (ARApiFileLocation * __nonnull)getFileLocation;

- (jint)getFileSize;

- (jint)getHeight;

- (jint)getWidth;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(ARApiImageLocation)

FOUNDATION_EXPORT void ARApiImageLocation_initWithARApiFileLocation_withInt_withInt_withInt_(ARApiImageLocation *self, ARApiFileLocation *fileLocation, jint width, jint height, jint fileSize);

FOUNDATION_EXPORT ARApiImageLocation *new_ARApiImageLocation_initWithARApiFileLocation_withInt_withInt_withInt_(ARApiFileLocation *fileLocation, jint width, jint height, jint fileSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARApiImageLocation *create_ARApiImageLocation_initWithARApiFileLocation_withInt_withInt_withInt_(ARApiFileLocation *fileLocation, jint width, jint height, jint fileSize);

FOUNDATION_EXPORT void ARApiImageLocation_init(ARApiImageLocation *self);

FOUNDATION_EXPORT ARApiImageLocation *new_ARApiImageLocation_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARApiImageLocation *create_ARApiImageLocation_init();

J2OBJC_TYPE_LITERAL_HEADER(ARApiImageLocation)

@compatibility_alias ImActorCoreApiApiImageLocation ARApiImageLocation;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreApiApiImageLocation")
