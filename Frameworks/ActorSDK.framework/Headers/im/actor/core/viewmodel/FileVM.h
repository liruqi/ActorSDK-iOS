//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/viewmodel/FileVM.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreViewmodelFileVM")
#ifdef RESTRICT_ImActorCoreViewmodelFileVM
#define INCLUDE_ALL_ImActorCoreViewmodelFileVM 0
#else
#define INCLUDE_ALL_ImActorCoreViewmodelFileVM 1
#endif
#undef RESTRICT_ImActorCoreViewmodelFileVM

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ACFileVM_) && (INCLUDE_ALL_ImActorCoreViewmodelFileVM || defined(INCLUDE_ACFileVM))
#define ACFileVM_

#define RESTRICT_ImActorRuntimeMvvmAsyncVM 1
#define INCLUDE_ARAsyncVM 1
#include "../../../../im/actor/runtime/mvvm/AsyncVM.h"

@class ACFileReference;
@class ACModules;
@protocol ACFileVMCallback;

/*!
 @brief Value Model handler for File.
 <p></p>
 Create by calling method in Messenger object and ALWAYS release by calling detach method.
 */
@interface ACFileVM : ARAsyncVM

#pragma mark Public

/*!
 @brief <p>INTERNAL API</p>
 Create FileVM
 @param location    file reference
 @param isAutostart is perform autostart
 @param modules     im.actor.android.modules reference
 @param vmCallback  View Model callback
 */
- (instancetype)initWithACFileReference:(ACFileReference *)location
                            withBoolean:(jboolean)isAutostart
                          withACModules:(ACModules *)modules
                   withACFileVMCallback:(id<ACFileVMCallback>)vmCallback;

/*!
 @brief Detach FileVM from Messenger.
 Don't use object after detaching.
 */
- (void)detach;

#pragma mark Protected

- (void)onObjectReceivedWithId:(id)obj;

@end

J2OBJC_EMPTY_STATIC_INIT(ACFileVM)

FOUNDATION_EXPORT void ACFileVM_initWithACFileReference_withBoolean_withACModules_withACFileVMCallback_(ACFileVM *self, ACFileReference *location, jboolean isAutostart, ACModules *modules, id<ACFileVMCallback> vmCallback);

FOUNDATION_EXPORT ACFileVM *new_ACFileVM_initWithACFileReference_withBoolean_withACModules_withACFileVMCallback_(ACFileReference *location, jboolean isAutostart, ACModules *modules, id<ACFileVMCallback> vmCallback) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACFileVM *create_ACFileVM_initWithACFileReference_withBoolean_withACModules_withACFileVMCallback_(ACFileReference *location, jboolean isAutostart, ACModules *modules, id<ACFileVMCallback> vmCallback);

J2OBJC_TYPE_LITERAL_HEADER(ACFileVM)

@compatibility_alias ImActorCoreViewmodelFileVM ACFileVM;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreViewmodelFileVM")
