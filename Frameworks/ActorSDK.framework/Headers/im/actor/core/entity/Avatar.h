//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/entity/Avatar.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreEntityAvatar")
#ifdef RESTRICT_ImActorCoreEntityAvatar
#define INCLUDE_ALL_ImActorCoreEntityAvatar 0
#else
#define INCLUDE_ALL_ImActorCoreEntityAvatar 1
#endif
#undef RESTRICT_ImActorCoreEntityAvatar

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ACAvatar_) && (INCLUDE_ALL_ImActorCoreEntityAvatar || defined(INCLUDE_ACAvatar))
#define ACAvatar_

#define RESTRICT_ImActorCoreEntityWrapperEntity 1
#define INCLUDE_ACWrapperEntity 1
#include "../../../../im/actor/core/entity/WrapperEntity.h"

@class ACAvatarImage;
@class ARApiAvatar;
@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

@interface ACAvatar : ACWrapperEntity
@property (readonly, nonatomic, getter=getSmallImage) ACAvatarImage *smallImage;
@property (readonly, nonatomic, getter=getLargeImage) ACAvatarImage *largeImage;
@property (readonly, nonatomic, getter=getFullImage) ACAvatarImage *fullImage;

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithARApiAvatar:(ARApiAvatar * __nonnull)wrapped;

- (instancetype)initWithByteArray:(IOSByteArray * __nonnull)data;

- (jboolean)isEqual:(id)o;

- (ACAvatarImage * __nullable)getFullImage;

- (ACAvatarImage * __nullable)getLargeImage;

- (ACAvatarImage * __nullable)getSmallImage;

- (NSUInteger)hash;

- (void)parseWithARBserValues:(ARBserValues *)values;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

#pragma mark Protected

- (void)applyWrappedWithARBserObject:(ARApiAvatar * __nonnull)wrapped;

- (ARApiAvatar * __nonnull)createInstance;

@end

J2OBJC_EMPTY_STATIC_INIT(ACAvatar)

FOUNDATION_EXPORT void ACAvatar_initWithARApiAvatar_(ACAvatar *self, ARApiAvatar *wrapped);

FOUNDATION_EXPORT ACAvatar *new_ACAvatar_initWithARApiAvatar_(ARApiAvatar *wrapped) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACAvatar *create_ACAvatar_initWithARApiAvatar_(ARApiAvatar *wrapped);

FOUNDATION_EXPORT void ACAvatar_initWithByteArray_(ACAvatar *self, IOSByteArray *data);

FOUNDATION_EXPORT ACAvatar *new_ACAvatar_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACAvatar *create_ACAvatar_initWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ACAvatar_init(ACAvatar *self);

FOUNDATION_EXPORT ACAvatar *new_ACAvatar_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACAvatar *create_ACAvatar_init();

J2OBJC_TYPE_LITERAL_HEADER(ACAvatar)

@compatibility_alias ImActorCoreEntityAvatar ACAvatar;

#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreEntityAvatar")
