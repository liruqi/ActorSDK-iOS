//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/entity/EntityConverter.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreEntityEntityConverter")
#ifdef RESTRICT_ImActorCoreEntityEntityConverter
#define INCLUDE_ALL_ImActorCoreEntityEntityConverter 0
#else
#define INCLUDE_ALL_ImActorCoreEntityEntityConverter 1
#endif
#undef RESTRICT_ImActorCoreEntityEntityConverter

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ACEntityConverter_) && (INCLUDE_ALL_ImActorCoreEntityEntityConverter || defined(INCLUDE_ACEntityConverter))
#define ACEntityConverter_

@class ACFastThumb;
@class ACGroup;
@class ACMessageState;
@class ACPeer;
@class ACPeerType;
@class ARApiFastThumb;
@class ARApiGroup;
@class ARApiMessageState;
@class ARApiPeer;
@class ARApiPeerType;

@interface ACEntityConverter : NSObject

#pragma mark Public

- (instancetype)init;

+ (ACFastThumb *)convertWithARApiFastThumb:(ARApiFastThumb *)fastThumb;

+ (ACGroup *)convertWithARApiGroup:(ARApiGroup *)group;

+ (ACMessageState *)convertWithARApiMessageState:(ARApiMessageState *)state;

+ (ACPeer *)convertWithARApiPeer:(ARApiPeer *)peer;

+ (ACPeerType *)convertWithARApiPeerType:(ARApiPeerType *)peerType;

@end

J2OBJC_EMPTY_STATIC_INIT(ACEntityConverter)

FOUNDATION_EXPORT ACMessageState *ACEntityConverter_convertWithARApiMessageState_(ARApiMessageState *state);

FOUNDATION_EXPORT ACGroup *ACEntityConverter_convertWithARApiGroup_(ARApiGroup *group);

FOUNDATION_EXPORT ACPeerType *ACEntityConverter_convertWithARApiPeerType_(ARApiPeerType *peerType);

FOUNDATION_EXPORT ACPeer *ACEntityConverter_convertWithARApiPeer_(ARApiPeer *peer);

FOUNDATION_EXPORT ACFastThumb *ACEntityConverter_convertWithARApiFastThumb_(ARApiFastThumb *fastThumb);

FOUNDATION_EXPORT void ACEntityConverter_init(ACEntityConverter *self);

FOUNDATION_EXPORT ACEntityConverter *new_ACEntityConverter_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ACEntityConverter *create_ACEntityConverter_init();

J2OBJC_TYPE_LITERAL_HEADER(ACEntityConverter)

@compatibility_alias ImActorCoreEntityEntityConverter ACEntityConverter;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreEntityEntityConverter")
