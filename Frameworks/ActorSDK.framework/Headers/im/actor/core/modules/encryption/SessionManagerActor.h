//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/modules/encryption/SessionManagerActor.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreModulesEncryptionSessionManagerActor")
#ifdef RESTRICT_ImActorCoreModulesEncryptionSessionManagerActor
#define INCLUDE_ALL_ImActorCoreModulesEncryptionSessionManagerActor 0
#else
#define INCLUDE_ALL_ImActorCoreModulesEncryptionSessionManagerActor 1
#endif
#undef RESTRICT_ImActorCoreModulesEncryptionSessionManagerActor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorCoreModulesEncryptionSessionManagerActor_) && (INCLUDE_ALL_ImActorCoreModulesEncryptionSessionManagerActor || defined(INCLUDE_ImActorCoreModulesEncryptionSessionManagerActor))
#define ImActorCoreModulesEncryptionSessionManagerActor_

#define RESTRICT_ImActorCoreModulesModuleActor 1
#define INCLUDE_ACModuleActor 1
#include "../../../../../im/actor/core/modules/ModuleActor.h"

@class ARPromise;
@protocol ACModuleContext;

/*!
 @brief Stores and manages encrypted sessions between peers.
 Can be asked to pick session parameters for specific peer.
 */
@interface ImActorCoreModulesEncryptionSessionManagerActor : ACModuleActor

#pragma mark Public

- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context;

- (ARPromise *)onAskWithId:(id)message;

/*!
 @brief Pick session
 @param uid        User's id
 @param keyGroupId User's key group
 */
- (ARPromise *)pickSessionWithInt:(jint)uid
                          withInt:(jint)keyGroupId;

/*!
 @brief Pick session for specific keys
 @param uid         User's id
 @param keyGroupId  User's key group
 @param ownKeyId    Own Pre Key id
 @param theirKeyId  Their Pre Key id
 */
- (ARPromise *)pickSessionWithInt:(jint)uid
                          withInt:(jint)keyGroupId
                         withLong:(jlong)ownKeyId
                         withLong:(jlong)theirKeyId;

- (void)preStart;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesEncryptionSessionManagerActor)

FOUNDATION_EXPORT void ImActorCoreModulesEncryptionSessionManagerActor_initWithACModuleContext_(ImActorCoreModulesEncryptionSessionManagerActor *self, id<ACModuleContext> context);

FOUNDATION_EXPORT ImActorCoreModulesEncryptionSessionManagerActor *new_ImActorCoreModulesEncryptionSessionManagerActor_initWithACModuleContext_(id<ACModuleContext> context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesEncryptionSessionManagerActor *create_ImActorCoreModulesEncryptionSessionManagerActor_initWithACModuleContext_(id<ACModuleContext> context);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesEncryptionSessionManagerActor)

#endif

#if !defined (ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt_) && (INCLUDE_ALL_ImActorCoreModulesEncryptionSessionManagerActor || defined(INCLUDE_ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt))
#define ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt_

#define RESTRICT_ImActorRuntimeActorsAskAskMessage 1
#define INCLUDE_ImActorRuntimeActorsAskAskMessage 1
#include "../../../../../im/actor/runtime/actors/ask/AskMessage.h"

@interface ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt : NSObject < ImActorRuntimeActorsAskAskMessage >

#pragma mark Public

- (instancetype)initWithInt:(jint)uid
                    withInt:(jint)keyGroupId
                   withLong:(jlong)theirPreKey
                   withLong:(jlong)ownPreKey;

- (jint)getKeyGroupId;

- (jlong)getOwnPreKey;

- (jlong)getTheirPreKey;

- (jint)getUid;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt)

FOUNDATION_EXPORT void ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt_initWithInt_withInt_withLong_withLong_(ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt *self, jint uid, jint keyGroupId, jlong theirPreKey, jlong ownPreKey);

FOUNDATION_EXPORT ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt *new_ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt_initWithInt_withInt_withLong_withLong_(jint uid, jint keyGroupId, jlong theirPreKey, jlong ownPreKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt *create_ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt_initWithInt_withInt_withLong_withLong_(jint uid, jint keyGroupId, jlong theirPreKey, jlong ownPreKey);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForDecrypt)

#endif

#if !defined (ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt_) && (INCLUDE_ALL_ImActorCoreModulesEncryptionSessionManagerActor || defined(INCLUDE_ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt))
#define ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt_

#define RESTRICT_ImActorRuntimeActorsAskAskMessage 1
#define INCLUDE_ImActorRuntimeActorsAskAskMessage 1
#include "../../../../../im/actor/runtime/actors/ask/AskMessage.h"

@interface ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt : NSObject < ImActorRuntimeActorsAskAskMessage >

#pragma mark Public

- (instancetype)initWithInt:(jint)uid
                    withInt:(jint)keyGroupId;

- (jint)getKeyGroupId;

- (jint)getUid;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt)

FOUNDATION_EXPORT void ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt_initWithInt_withInt_(ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt *self, jint uid, jint keyGroupId);

FOUNDATION_EXPORT ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt *new_ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt_initWithInt_withInt_(jint uid, jint keyGroupId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt *create_ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt_initWithInt_withInt_(jint uid, jint keyGroupId);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesEncryptionSessionManagerActor_PickSessionForEncrypt)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreModulesEncryptionSessionManagerActor")
