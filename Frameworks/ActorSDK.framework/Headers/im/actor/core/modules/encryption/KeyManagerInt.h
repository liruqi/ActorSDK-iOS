//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/modules/encryption/KeyManagerInt.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreModulesEncryptionKeyManagerInt")
#ifdef RESTRICT_ImActorCoreModulesEncryptionKeyManagerInt
#define INCLUDE_ALL_ImActorCoreModulesEncryptionKeyManagerInt 0
#else
#define INCLUDE_ALL_ImActorCoreModulesEncryptionKeyManagerInt 1
#endif
#undef RESTRICT_ImActorCoreModulesEncryptionKeyManagerInt

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorCoreModulesEncryptionKeyManagerInt_) && (INCLUDE_ALL_ImActorCoreModulesEncryptionKeyManagerInt || defined(INCLUDE_ImActorCoreModulesEncryptionKeyManagerInt))
#define ImActorCoreModulesEncryptionKeyManagerInt_

#define RESTRICT_ImActorRuntimeActorsActorInterface 1
#define INCLUDE_ARActorInterface 1
#include "../../../../../im/actor/runtime/actors/ActorInterface.h"

@class ARActorRef;
@class ARPromise;
@protocol ARSupplier;

@interface ImActorCoreModulesEncryptionKeyManagerInt : ARActorInterface

#pragma mark Public

- (instancetype)initWithARActorRef:(ARActorRef *)dest;

- (ARPromise *)getOwnIdentity;

- (ARPromise *)getOwnPreKeyWithLong:(jlong)id_;

- (ARPromise *)getOwnRandomPreKey;

- (ARPromise *)getUserKeyGroupsWithInt:(jint)uid;

- (ARPromise *)getUserPreKeyWithInt:(jint)uid
                            withInt:(jint)keyGroupId
                           withLong:(jlong)preKeyId;

- (ARPromise *)getUserRandomPreKeyWithInt:(jint)uid
                                  withInt:(jint)keyGroupId;

- (id<ARSupplier>)supplyUserPreKeyWithInt:(jint)uid
                                  withInt:(jint)keyGroupId;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesEncryptionKeyManagerInt)

FOUNDATION_EXPORT void ImActorCoreModulesEncryptionKeyManagerInt_initWithARActorRef_(ImActorCoreModulesEncryptionKeyManagerInt *self, ARActorRef *dest);

FOUNDATION_EXPORT ImActorCoreModulesEncryptionKeyManagerInt *new_ImActorCoreModulesEncryptionKeyManagerInt_initWithARActorRef_(ARActorRef *dest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesEncryptionKeyManagerInt *create_ImActorCoreModulesEncryptionKeyManagerInt_initWithARActorRef_(ARActorRef *dest);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesEncryptionKeyManagerInt)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreModulesEncryptionKeyManagerInt")
