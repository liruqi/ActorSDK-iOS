//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/modules/encryption/entity/PrivateKey.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreModulesEncryptionEntityPrivateKey")
#ifdef RESTRICT_ImActorCoreModulesEncryptionEntityPrivateKey
#define INCLUDE_ALL_ImActorCoreModulesEncryptionEntityPrivateKey 0
#else
#define INCLUDE_ALL_ImActorCoreModulesEncryptionEntityPrivateKey 1
#endif
#undef RESTRICT_ImActorCoreModulesEncryptionEntityPrivateKey

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorCoreModulesEncryptionEntityPrivateKey_) && (INCLUDE_ALL_ImActorCoreModulesEncryptionEntityPrivateKey || defined(INCLUDE_ImActorCoreModulesEncryptionEntityPrivateKey))
#define ImActorCoreModulesEncryptionEntityPrivateKey_

#define RESTRICT_ImActorRuntimeBserBserObject 1
#define INCLUDE_ARBserObject 1
#include "../../../../../../im/actor/runtime/bser/BserObject.h"

@class ARApiEncryptionKey;
@class ARBserValues;
@class ARBserWriter;
@class IOSByteArray;
@class JavaLangBoolean;
@protocol ARFunction;
@protocol ARPredicate;
@protocol ARSupplier;

@interface ImActorCoreModulesEncryptionEntityPrivateKey : ARBserObject

+ (id<ARFunction>)TO_API;

+ (id<ARSupplier>)GENERATOR;

+ (id<ARPredicate>)NOT_UPLOADED;

+ (id<ARPredicate>)UPLOADED;

#pragma mark Public

- (instancetype)initWithByteArray:(IOSByteArray *)data;

- (instancetype)initWithLong:(jlong)keyId
                withNSString:(NSString *)keyAlg
               withByteArray:(IOSByteArray *)privateKey
               withByteArray:(IOSByteArray *)publicKey;

- (instancetype)initWithLong:(jlong)keyId
                withNSString:(NSString *)keyAlg
               withByteArray:(IOSByteArray *)privateKey
               withByteArray:(IOSByteArray *)publicKey
         withJavaLangBoolean:(JavaLangBoolean *)isUploaded;

- (IOSByteArray *)getKey;

- (NSString *)getKeyAlg;

- (jlong)getKeyId;

- (IOSByteArray *)getPublicKey;

- (jboolean)isUploaded;

- (jboolean)isWasRegenerated;

- (ImActorCoreModulesEncryptionEntityPrivateKey *)markAsUploaded;

- (void)parseWithARBserValues:(ARBserValues *)values;

+ (id<ARPredicate>)PRE_KEY_EQUALSWithByteArray:(IOSByteArray *)publicKey;

+ (id<ARPredicate>)PRE_KEY_EQUALS_IDWithLong:(jlong)id_;

- (void)serializeWithARBserWriter:(ARBserWriter *)writer;

+ (id<ARFunction>)SIGNWithImActorCoreModulesEncryptionEntityPrivateKey:(ImActorCoreModulesEncryptionEntityPrivateKey *)identity;

- (ARApiEncryptionKey *)toApiKey;

@end

J2OBJC_STATIC_INIT(ImActorCoreModulesEncryptionEntityPrivateKey)

inline id<ARFunction> ImActorCoreModulesEncryptionEntityPrivateKey_get_TO_API();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ARFunction> ImActorCoreModulesEncryptionEntityPrivateKey_TO_API;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImActorCoreModulesEncryptionEntityPrivateKey, TO_API, id<ARFunction>)

inline id<ARSupplier> ImActorCoreModulesEncryptionEntityPrivateKey_get_GENERATOR();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ARSupplier> ImActorCoreModulesEncryptionEntityPrivateKey_GENERATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImActorCoreModulesEncryptionEntityPrivateKey, GENERATOR, id<ARSupplier>)

inline id<ARPredicate> ImActorCoreModulesEncryptionEntityPrivateKey_get_NOT_UPLOADED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ARPredicate> ImActorCoreModulesEncryptionEntityPrivateKey_NOT_UPLOADED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImActorCoreModulesEncryptionEntityPrivateKey, NOT_UPLOADED, id<ARPredicate>)

inline id<ARPredicate> ImActorCoreModulesEncryptionEntityPrivateKey_get_UPLOADED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<ARPredicate> ImActorCoreModulesEncryptionEntityPrivateKey_UPLOADED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImActorCoreModulesEncryptionEntityPrivateKey, UPLOADED, id<ARPredicate>)

FOUNDATION_EXPORT id<ARPredicate> ImActorCoreModulesEncryptionEntityPrivateKey_PRE_KEY_EQUALSWithByteArray_(IOSByteArray *publicKey);

FOUNDATION_EXPORT id<ARPredicate> ImActorCoreModulesEncryptionEntityPrivateKey_PRE_KEY_EQUALS_IDWithLong_(jlong id_);

FOUNDATION_EXPORT id<ARFunction> ImActorCoreModulesEncryptionEntityPrivateKey_SIGNWithImActorCoreModulesEncryptionEntityPrivateKey_(ImActorCoreModulesEncryptionEntityPrivateKey *identity);

FOUNDATION_EXPORT void ImActorCoreModulesEncryptionEntityPrivateKey_initWithLong_withNSString_withByteArray_withByteArray_withJavaLangBoolean_(ImActorCoreModulesEncryptionEntityPrivateKey *self, jlong keyId, NSString *keyAlg, IOSByteArray *privateKey, IOSByteArray *publicKey, JavaLangBoolean *isUploaded);

FOUNDATION_EXPORT ImActorCoreModulesEncryptionEntityPrivateKey *new_ImActorCoreModulesEncryptionEntityPrivateKey_initWithLong_withNSString_withByteArray_withByteArray_withJavaLangBoolean_(jlong keyId, NSString *keyAlg, IOSByteArray *privateKey, IOSByteArray *publicKey, JavaLangBoolean *isUploaded) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesEncryptionEntityPrivateKey *create_ImActorCoreModulesEncryptionEntityPrivateKey_initWithLong_withNSString_withByteArray_withByteArray_withJavaLangBoolean_(jlong keyId, NSString *keyAlg, IOSByteArray *privateKey, IOSByteArray *publicKey, JavaLangBoolean *isUploaded);

FOUNDATION_EXPORT void ImActorCoreModulesEncryptionEntityPrivateKey_initWithLong_withNSString_withByteArray_withByteArray_(ImActorCoreModulesEncryptionEntityPrivateKey *self, jlong keyId, NSString *keyAlg, IOSByteArray *privateKey, IOSByteArray *publicKey);

FOUNDATION_EXPORT ImActorCoreModulesEncryptionEntityPrivateKey *new_ImActorCoreModulesEncryptionEntityPrivateKey_initWithLong_withNSString_withByteArray_withByteArray_(jlong keyId, NSString *keyAlg, IOSByteArray *privateKey, IOSByteArray *publicKey) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesEncryptionEntityPrivateKey *create_ImActorCoreModulesEncryptionEntityPrivateKey_initWithLong_withNSString_withByteArray_withByteArray_(jlong keyId, NSString *keyAlg, IOSByteArray *privateKey, IOSByteArray *publicKey);

FOUNDATION_EXPORT void ImActorCoreModulesEncryptionEntityPrivateKey_initWithByteArray_(ImActorCoreModulesEncryptionEntityPrivateKey *self, IOSByteArray *data);

FOUNDATION_EXPORT ImActorCoreModulesEncryptionEntityPrivateKey *new_ImActorCoreModulesEncryptionEntityPrivateKey_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesEncryptionEntityPrivateKey *create_ImActorCoreModulesEncryptionEntityPrivateKey_initWithByteArray_(IOSByteArray *data);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesEncryptionEntityPrivateKey)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreModulesEncryptionEntityPrivateKey")
