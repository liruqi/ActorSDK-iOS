//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/modules/notifications/NotificationsActor.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreModulesNotificationsNotificationsActor")
#ifdef RESTRICT_ImActorCoreModulesNotificationsNotificationsActor
#define INCLUDE_ALL_ImActorCoreModulesNotificationsNotificationsActor 0
#else
#define INCLUDE_ALL_ImActorCoreModulesNotificationsNotificationsActor 1
#endif
#undef RESTRICT_ImActorCoreModulesNotificationsNotificationsActor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorCoreModulesNotificationsNotificationsActor_) && (INCLUDE_ALL_ImActorCoreModulesNotificationsNotificationsActor || defined(INCLUDE_ImActorCoreModulesNotificationsNotificationsActor))
#define ImActorCoreModulesNotificationsNotificationsActor_

#define RESTRICT_ImActorCoreModulesModuleActor 1
#define INCLUDE_ACModuleActor 1
#include "../../../../../im/actor/core/modules/ModuleActor.h"

@class ACContentDescription;
@class ACPeer;
@class ImActorRuntimeEventbusEvent;
@protocol ACModuleContext;

/*!
 @brief Actor that controls all notifications in application
 <p/>
 NotificationsActor keeps all unread messages for showing last unread messages in notifications
 Actor also control sound effects playing logic
 */
@interface ImActorCoreModulesNotificationsNotificationsActor : ACModuleActor

#pragma mark Public

/*!
 @brief Constructor of Actor
 @param context Module context
 */
- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context;

/*!
 @brief Processing Application hidden event
 */
- (void)onAppHidden;

/*!
 @brief Processing Application visible event
 */
- (void)onAppVisible;

/*!
 @brief Receiving bus events
 @param event event
 */
- (void)onBusEventWithImActorRuntimeEventbusEvent:(ImActorRuntimeEventbusEvent *)event;

/*!
 @brief Processing Conversation hidden event
 @param peer peer
 */
- (void)onConversationHiddenWithACPeer:(ACPeer *)peer;

/*!
 @brief Processing Conversation visible event
 @param peer peer
 */
- (void)onConversationVisibleWithACPeer:(ACPeer *)peer;

/*!
 @brief Processing event about messages read
 @param peer     peer
 @param fromDate read from date
 */
- (void)onMessagesReadWithACPeer:(ACPeer *)peer
                        withLong:(jlong)fromDate;

/*!
 @brief Handling event about incoming notification
 @param peer                  peer of message
 @param sender                sender uid of message
 @param date                  date of message
 @param description_           content description of message
 @param hasCurrentUserMention does message have user mention
 */
- (void)onNewMessageWithACPeer:(ACPeer *)peer
                       withInt:(jint)sender
                      withLong:(jlong)date
      withACContentDescription:(ACContentDescription *)description_
                   withBoolean:(jboolean)hasCurrentUserMention;

/*!
 @brief Pausing notifications
 */
- (void)onNotificationsPaused;

/*!
 @brief Resuming notifications.
 Checking all pending notification peers and play notifications if it is required.
 WARRING: Implementation contains modified copy of code of onNewMessage method
 */
- (void)onNotificationsResumed;

/*!
 @brief Receiving messages
 @param message message
 */
- (void)onReceiveWithId:(id)message;

- (void)preStart;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesNotificationsNotificationsActor)

FOUNDATION_EXPORT void ImActorCoreModulesNotificationsNotificationsActor_initWithACModuleContext_(ImActorCoreModulesNotificationsNotificationsActor *self, id<ACModuleContext> context);

FOUNDATION_EXPORT ImActorCoreModulesNotificationsNotificationsActor *new_ImActorCoreModulesNotificationsNotificationsActor_initWithACModuleContext_(id<ACModuleContext> context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesNotificationsNotificationsActor *create_ImActorCoreModulesNotificationsNotificationsActor_initWithACModuleContext_(id<ACModuleContext> context);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesNotificationsNotificationsActor)

#endif

#if !defined (ImActorCoreModulesNotificationsNotificationsActor_NewMessage_) && (INCLUDE_ALL_ImActorCoreModulesNotificationsNotificationsActor || defined(INCLUDE_ImActorCoreModulesNotificationsNotificationsActor_NewMessage))
#define ImActorCoreModulesNotificationsNotificationsActor_NewMessage_

@class ACContentDescription;
@class ACPeer;

@interface ImActorCoreModulesNotificationsNotificationsActor_NewMessage : NSObject

#pragma mark Public

- (instancetype)initWithACPeer:(ACPeer *)peer
                       withInt:(jint)sender
                      withLong:(jlong)sortDate
      withACContentDescription:(ACContentDescription *)contentDescription
                   withBoolean:(jboolean)hasCurrentUserMention;

- (ACContentDescription *)getContentDescription;

- (jboolean)getHasCurrentUserMention;

- (ACPeer *)getPeer;

- (jint)getSender;

- (jlong)getSortDate;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesNotificationsNotificationsActor_NewMessage)

FOUNDATION_EXPORT void ImActorCoreModulesNotificationsNotificationsActor_NewMessage_initWithACPeer_withInt_withLong_withACContentDescription_withBoolean_(ImActorCoreModulesNotificationsNotificationsActor_NewMessage *self, ACPeer *peer, jint sender, jlong sortDate, ACContentDescription *contentDescription, jboolean hasCurrentUserMention);

FOUNDATION_EXPORT ImActorCoreModulesNotificationsNotificationsActor_NewMessage *new_ImActorCoreModulesNotificationsNotificationsActor_NewMessage_initWithACPeer_withInt_withLong_withACContentDescription_withBoolean_(ACPeer *peer, jint sender, jlong sortDate, ACContentDescription *contentDescription, jboolean hasCurrentUserMention) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesNotificationsNotificationsActor_NewMessage *create_ImActorCoreModulesNotificationsNotificationsActor_NewMessage_initWithACPeer_withInt_withLong_withACContentDescription_withBoolean_(ACPeer *peer, jint sender, jlong sortDate, ACContentDescription *contentDescription, jboolean hasCurrentUserMention);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesNotificationsNotificationsActor_NewMessage)

#endif

#if !defined (ImActorCoreModulesNotificationsNotificationsActor_MessagesRead_) && (INCLUDE_ALL_ImActorCoreModulesNotificationsNotificationsActor || defined(INCLUDE_ImActorCoreModulesNotificationsNotificationsActor_MessagesRead))
#define ImActorCoreModulesNotificationsNotificationsActor_MessagesRead_

@class ACPeer;

@interface ImActorCoreModulesNotificationsNotificationsActor_MessagesRead : NSObject

#pragma mark Public

- (instancetype)initWithACPeer:(ACPeer *)peer
                      withLong:(jlong)fromDate;

- (jlong)getFromDate;

- (ACPeer *)getPeer;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesNotificationsNotificationsActor_MessagesRead)

FOUNDATION_EXPORT void ImActorCoreModulesNotificationsNotificationsActor_MessagesRead_initWithACPeer_withLong_(ImActorCoreModulesNotificationsNotificationsActor_MessagesRead *self, ACPeer *peer, jlong fromDate);

FOUNDATION_EXPORT ImActorCoreModulesNotificationsNotificationsActor_MessagesRead *new_ImActorCoreModulesNotificationsNotificationsActor_MessagesRead_initWithACPeer_withLong_(ACPeer *peer, jlong fromDate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesNotificationsNotificationsActor_MessagesRead *create_ImActorCoreModulesNotificationsNotificationsActor_MessagesRead_initWithACPeer_withLong_(ACPeer *peer, jlong fromDate);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesNotificationsNotificationsActor_MessagesRead)

#endif

#if !defined (ImActorCoreModulesNotificationsNotificationsActor_PauseNotifications_) && (INCLUDE_ALL_ImActorCoreModulesNotificationsNotificationsActor || defined(INCLUDE_ImActorCoreModulesNotificationsNotificationsActor_PauseNotifications))
#define ImActorCoreModulesNotificationsNotificationsActor_PauseNotifications_

@interface ImActorCoreModulesNotificationsNotificationsActor_PauseNotifications : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesNotificationsNotificationsActor_PauseNotifications)

FOUNDATION_EXPORT void ImActorCoreModulesNotificationsNotificationsActor_PauseNotifications_init(ImActorCoreModulesNotificationsNotificationsActor_PauseNotifications *self);

FOUNDATION_EXPORT ImActorCoreModulesNotificationsNotificationsActor_PauseNotifications *new_ImActorCoreModulesNotificationsNotificationsActor_PauseNotifications_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesNotificationsNotificationsActor_PauseNotifications *create_ImActorCoreModulesNotificationsNotificationsActor_PauseNotifications_init();

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesNotificationsNotificationsActor_PauseNotifications)

#endif

#if !defined (ImActorCoreModulesNotificationsNotificationsActor_ResumeNotifications_) && (INCLUDE_ALL_ImActorCoreModulesNotificationsNotificationsActor || defined(INCLUDE_ImActorCoreModulesNotificationsNotificationsActor_ResumeNotifications))
#define ImActorCoreModulesNotificationsNotificationsActor_ResumeNotifications_

@interface ImActorCoreModulesNotificationsNotificationsActor_ResumeNotifications : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesNotificationsNotificationsActor_ResumeNotifications)

FOUNDATION_EXPORT void ImActorCoreModulesNotificationsNotificationsActor_ResumeNotifications_init(ImActorCoreModulesNotificationsNotificationsActor_ResumeNotifications *self);

FOUNDATION_EXPORT ImActorCoreModulesNotificationsNotificationsActor_ResumeNotifications *new_ImActorCoreModulesNotificationsNotificationsActor_ResumeNotifications_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesNotificationsNotificationsActor_ResumeNotifications *create_ImActorCoreModulesNotificationsNotificationsActor_ResumeNotifications_init();

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesNotificationsNotificationsActor_ResumeNotifications)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreModulesNotificationsNotificationsActor")
