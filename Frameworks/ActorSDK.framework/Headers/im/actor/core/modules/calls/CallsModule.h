//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/modules/calls/CallsModule.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreModulesCallsCallsModule")
#ifdef RESTRICT_ImActorCoreModulesCallsCallsModule
#define INCLUDE_ALL_ImActorCoreModulesCallsCallsModule 0
#else
#define INCLUDE_ALL_ImActorCoreModulesCallsCallsModule 1
#endif
#undef RESTRICT_ImActorCoreModulesCallsCallsModule

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorCoreModulesCallsCallsModule_) && (INCLUDE_ALL_ImActorCoreModulesCallsCallsModule || defined(INCLUDE_ImActorCoreModulesCallsCallsModule))
#define ImActorCoreModulesCallsCallsModule_

#define RESTRICT_ImActorCoreModulesAbsModule 1
#define INCLUDE_ACAbsModule 1
#include "../../../../../im/actor/core/modules/AbsModule.h"

@class ACCallVM;
@class ACPeer;
@class ARActorRef;
@class ImActorCoreModulesCallsCallViewModels;
@protocol ACCommand;
@protocol ACModuleContext;

@interface ImActorCoreModulesCallsCallsModule : ACAbsModule

+ (NSString *)TAG;

#pragma mark Public

- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context;

- (void)answerCallWithLong:(jlong)callId;

- (void)checkCallWithLong:(jlong)callId
                  withInt:(jint)attempt;

- (void)endCallWithLong:(jlong)callId;

- (ACCallVM *)getCallWithLong:(jlong)id_;

- (ARActorRef *)getCallManager;

- (ImActorCoreModulesCallsCallViewModels *)getCallViewModels;

- (id<ACCommand>)makeCallWithACPeer:(ACPeer *)peer;

- (void)muteCallWithLong:(jlong)callId;

- (void)probablyEndCall;

- (void)run;

- (void)unmuteCallWithLong:(jlong)callId;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesCallsCallsModule)

inline NSString *ImActorCoreModulesCallsCallsModule_get_TAG();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ImActorCoreModulesCallsCallsModule_TAG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImActorCoreModulesCallsCallsModule, TAG, NSString *)

FOUNDATION_EXPORT void ImActorCoreModulesCallsCallsModule_initWithACModuleContext_(ImActorCoreModulesCallsCallsModule *self, id<ACModuleContext> context);

FOUNDATION_EXPORT ImActorCoreModulesCallsCallsModule *new_ImActorCoreModulesCallsCallsModule_initWithACModuleContext_(id<ACModuleContext> context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesCallsCallsModule *create_ImActorCoreModulesCallsCallsModule_initWithACModuleContext_(id<ACModuleContext> context);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesCallsCallsModule)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreModulesCallsCallsModule")
