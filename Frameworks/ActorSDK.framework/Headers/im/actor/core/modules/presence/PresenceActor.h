//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/modules/presence/PresenceActor.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreModulesPresencePresenceActor")
#ifdef RESTRICT_ImActorCoreModulesPresencePresenceActor
#define INCLUDE_ALL_ImActorCoreModulesPresencePresenceActor 0
#else
#define INCLUDE_ALL_ImActorCoreModulesPresencePresenceActor 1
#endif
#undef RESTRICT_ImActorCoreModulesPresencePresenceActor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorCoreModulesPresencePresenceActor_) && (INCLUDE_ALL_ImActorCoreModulesPresencePresenceActor || defined(INCLUDE_ImActorCoreModulesPresencePresenceActor))
#define ImActorCoreModulesPresencePresenceActor_

#define RESTRICT_ImActorCoreModulesModuleActor 1
#define INCLUDE_ACModuleActor 1
#include "../../../../../im/actor/core/modules/ModuleActor.h"

#define RESTRICT_ImActorRuntimeEventbusBusSubscriber 1
#define INCLUDE_ImActorRuntimeEventbusBusSubscriber 1
#include "../../../../../im/actor/runtime/eventbus/BusSubscriber.h"

@class ARActorRef;
@class ImActorRuntimeEventbusEvent;
@protocol ACModuleContext;

@interface ImActorCoreModulesPresencePresenceActor : ACModuleActor < ImActorRuntimeEventbusBusSubscriber >

#pragma mark Public

- (instancetype)initWithACModuleContext:(id<ACModuleContext>)messenger;

+ (ARActorRef *)createWithACModuleContext:(id<ACModuleContext>)messenger;

- (void)onBusEventWithImActorRuntimeEventbusEvent:(ImActorRuntimeEventbusEvent *)event;

- (void)onReceiveWithId:(id)message;

- (void)preStart;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesPresencePresenceActor)

FOUNDATION_EXPORT ARActorRef *ImActorCoreModulesPresencePresenceActor_createWithACModuleContext_(id<ACModuleContext> messenger);

FOUNDATION_EXPORT void ImActorCoreModulesPresencePresenceActor_initWithACModuleContext_(ImActorCoreModulesPresencePresenceActor *self, id<ACModuleContext> messenger);

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor *new_ImActorCoreModulesPresencePresenceActor_initWithACModuleContext_(id<ACModuleContext> messenger) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor *create_ImActorCoreModulesPresencePresenceActor_initWithACModuleContext_(id<ACModuleContext> messenger);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesPresencePresenceActor)

#endif

#if !defined (ImActorCoreModulesPresencePresenceActor_UserOnline_) && (INCLUDE_ALL_ImActorCoreModulesPresencePresenceActor || defined(INCLUDE_ImActorCoreModulesPresencePresenceActor_UserOnline))
#define ImActorCoreModulesPresencePresenceActor_UserOnline_

@interface ImActorCoreModulesPresencePresenceActor_UserOnline : NSObject

#pragma mark Public

- (instancetype)initWithInt:(jint)uid
                   withLong:(jlong)updateDate;

- (jint)getUid;

- (jlong)getUpdateDate;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesPresencePresenceActor_UserOnline)

FOUNDATION_EXPORT void ImActorCoreModulesPresencePresenceActor_UserOnline_initWithInt_withLong_(ImActorCoreModulesPresencePresenceActor_UserOnline *self, jint uid, jlong updateDate);

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor_UserOnline *new_ImActorCoreModulesPresencePresenceActor_UserOnline_initWithInt_withLong_(jint uid, jlong updateDate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor_UserOnline *create_ImActorCoreModulesPresencePresenceActor_UserOnline_initWithInt_withLong_(jint uid, jlong updateDate);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesPresencePresenceActor_UserOnline)

#endif

#if !defined (ImActorCoreModulesPresencePresenceActor_UserOffline_) && (INCLUDE_ALL_ImActorCoreModulesPresencePresenceActor || defined(INCLUDE_ImActorCoreModulesPresencePresenceActor_UserOffline))
#define ImActorCoreModulesPresencePresenceActor_UserOffline_

@interface ImActorCoreModulesPresencePresenceActor_UserOffline : NSObject

#pragma mark Public

- (instancetype)initWithInt:(jint)uid
                   withLong:(jlong)updateDate;

- (jint)getUid;

- (jlong)getUpdateDate;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesPresencePresenceActor_UserOffline)

FOUNDATION_EXPORT void ImActorCoreModulesPresencePresenceActor_UserOffline_initWithInt_withLong_(ImActorCoreModulesPresencePresenceActor_UserOffline *self, jint uid, jlong updateDate);

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor_UserOffline *new_ImActorCoreModulesPresencePresenceActor_UserOffline_initWithInt_withLong_(jint uid, jlong updateDate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor_UserOffline *create_ImActorCoreModulesPresencePresenceActor_UserOffline_initWithInt_withLong_(jint uid, jlong updateDate);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesPresencePresenceActor_UserOffline)

#endif

#if !defined (ImActorCoreModulesPresencePresenceActor_UserLastSeen_) && (INCLUDE_ALL_ImActorCoreModulesPresencePresenceActor || defined(INCLUDE_ImActorCoreModulesPresencePresenceActor_UserLastSeen))
#define ImActorCoreModulesPresencePresenceActor_UserLastSeen_

@interface ImActorCoreModulesPresencePresenceActor_UserLastSeen : NSObject

#pragma mark Public

- (instancetype)initWithInt:(jint)uid
                    withInt:(jint)date
                   withLong:(jlong)updateDate;

- (jint)getDate;

- (jint)getUid;

- (jlong)getUpdateDate;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesPresencePresenceActor_UserLastSeen)

FOUNDATION_EXPORT void ImActorCoreModulesPresencePresenceActor_UserLastSeen_initWithInt_withInt_withLong_(ImActorCoreModulesPresencePresenceActor_UserLastSeen *self, jint uid, jint date, jlong updateDate);

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor_UserLastSeen *new_ImActorCoreModulesPresencePresenceActor_UserLastSeen_initWithInt_withInt_withLong_(jint uid, jint date, jlong updateDate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor_UserLastSeen *create_ImActorCoreModulesPresencePresenceActor_UserLastSeen_initWithInt_withInt_withLong_(jint uid, jint date, jlong updateDate);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesPresencePresenceActor_UserLastSeen)

#endif

#if !defined (ImActorCoreModulesPresencePresenceActor_GroupOnline_) && (INCLUDE_ALL_ImActorCoreModulesPresencePresenceActor || defined(INCLUDE_ImActorCoreModulesPresencePresenceActor_GroupOnline))
#define ImActorCoreModulesPresencePresenceActor_GroupOnline_

@interface ImActorCoreModulesPresencePresenceActor_GroupOnline : NSObject

#pragma mark Public

- (instancetype)initWithInt:(jint)gid
                    withInt:(jint)count
                   withLong:(jlong)updateDate;

- (jint)getCount;

- (jint)getGid;

- (jlong)getUpdateDate;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesPresencePresenceActor_GroupOnline)

FOUNDATION_EXPORT void ImActorCoreModulesPresencePresenceActor_GroupOnline_initWithInt_withInt_withLong_(ImActorCoreModulesPresencePresenceActor_GroupOnline *self, jint gid, jint count, jlong updateDate);

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor_GroupOnline *new_ImActorCoreModulesPresencePresenceActor_GroupOnline_initWithInt_withInt_withLong_(jint gid, jint count, jlong updateDate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor_GroupOnline *create_ImActorCoreModulesPresencePresenceActor_GroupOnline_initWithInt_withInt_withLong_(jint gid, jint count, jlong updateDate);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesPresencePresenceActor_GroupOnline)

#endif

#if !defined (ImActorCoreModulesPresencePresenceActor_Subscribe_) && (INCLUDE_ALL_ImActorCoreModulesPresencePresenceActor || defined(INCLUDE_ImActorCoreModulesPresencePresenceActor_Subscribe))
#define ImActorCoreModulesPresencePresenceActor_Subscribe_

@class ACPeer;

@interface ImActorCoreModulesPresencePresenceActor_Subscribe : NSObject

#pragma mark Public

- (instancetype)initWithACPeer:(ACPeer *)peer;

- (ACPeer *)getPeer;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesPresencePresenceActor_Subscribe)

FOUNDATION_EXPORT void ImActorCoreModulesPresencePresenceActor_Subscribe_initWithACPeer_(ImActorCoreModulesPresencePresenceActor_Subscribe *self, ACPeer *peer);

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor_Subscribe *new_ImActorCoreModulesPresencePresenceActor_Subscribe_initWithACPeer_(ACPeer *peer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor_Subscribe *create_ImActorCoreModulesPresencePresenceActor_Subscribe_initWithACPeer_(ACPeer *peer);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesPresencePresenceActor_Subscribe)

#endif

#if !defined (ImActorCoreModulesPresencePresenceActor_SessionCreated_) && (INCLUDE_ALL_ImActorCoreModulesPresencePresenceActor || defined(INCLUDE_ImActorCoreModulesPresencePresenceActor_SessionCreated))
#define ImActorCoreModulesPresencePresenceActor_SessionCreated_

@interface ImActorCoreModulesPresencePresenceActor_SessionCreated : NSObject

#pragma mark Public

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesPresencePresenceActor_SessionCreated)

FOUNDATION_EXPORT void ImActorCoreModulesPresencePresenceActor_SessionCreated_init(ImActorCoreModulesPresencePresenceActor_SessionCreated *self);

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor_SessionCreated *new_ImActorCoreModulesPresencePresenceActor_SessionCreated_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesPresencePresenceActor_SessionCreated *create_ImActorCoreModulesPresencePresenceActor_SessionCreated_init();

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesPresencePresenceActor_SessionCreated)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreModulesPresencePresenceActor")
