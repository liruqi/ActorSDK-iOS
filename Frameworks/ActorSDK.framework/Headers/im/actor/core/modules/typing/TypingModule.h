//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/modules/typing/TypingModule.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreModulesTypingTypingModule")
#ifdef RESTRICT_ImActorCoreModulesTypingTypingModule
#define INCLUDE_ALL_ImActorCoreModulesTypingTypingModule 0
#else
#define INCLUDE_ALL_ImActorCoreModulesTypingTypingModule 1
#endif
#undef RESTRICT_ImActorCoreModulesTypingTypingModule

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorCoreModulesTypingTypingModule_) && (INCLUDE_ALL_ImActorCoreModulesTypingTypingModule || defined(INCLUDE_ImActorCoreModulesTypingTypingModule))
#define ImActorCoreModulesTypingTypingModule_

#define RESTRICT_ImActorCoreModulesAbsModule 1
#define INCLUDE_ACAbsModule 1
#include "../../../../../im/actor/core/modules/AbsModule.h"

@class ACGroupTypingVM;
@class ACPeer;
@class ACUserTypingVM;
@protocol ACModuleContext;

@interface ImActorCoreModulesTypingTypingModule : ACAbsModule

#pragma mark Public

- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context;

- (ACGroupTypingVM *)getGroupTypingWithInt:(jint)gid;

- (ACUserTypingVM *)getTypingWithInt:(jint)uid;

- (void)onMessageSentWithACPeer:(ACPeer *)peer;

- (void)onTypingWithACPeer:(ACPeer *)peer;

- (void)resetModule;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesTypingTypingModule)

FOUNDATION_EXPORT void ImActorCoreModulesTypingTypingModule_initWithACModuleContext_(ImActorCoreModulesTypingTypingModule *self, id<ACModuleContext> context);

FOUNDATION_EXPORT ImActorCoreModulesTypingTypingModule *new_ImActorCoreModulesTypingTypingModule_initWithACModuleContext_(id<ACModuleContext> context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesTypingTypingModule *create_ImActorCoreModulesTypingTypingModule_initWithACModuleContext_(id<ACModuleContext> context);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesTypingTypingModule)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreModulesTypingTypingModule")
