//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/modules/blocklist/BlockListModule.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreModulesBlocklistBlockListModule")
#ifdef RESTRICT_ImActorCoreModulesBlocklistBlockListModule
#define INCLUDE_ALL_ImActorCoreModulesBlocklistBlockListModule 0
#else
#define INCLUDE_ALL_ImActorCoreModulesBlocklistBlockListModule 1
#endif
#undef RESTRICT_ImActorCoreModulesBlocklistBlockListModule

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorCoreModulesBlocklistBlockListModule_) && (INCLUDE_ALL_ImActorCoreModulesBlocklistBlockListModule || defined(INCLUDE_ImActorCoreModulesBlocklistBlockListModule))
#define ImActorCoreModulesBlocklistBlockListModule_

#define RESTRICT_ImActorCoreModulesAbsModule 1
#define INCLUDE_ACAbsModule 1
#include "../../../../../im/actor/core/modules/AbsModule.h"

@class ARPromise;
@protocol ACModuleContext;

@interface ImActorCoreModulesBlocklistBlockListModule : ACAbsModule

#pragma mark Public

- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context;

- (ARPromise *)blockUserWithInt:(jint)uid;

- (jboolean)isUserBlockedWithInt:(jint)uid;

- (ARPromise *)loadBlockedUsers;

- (void)markBlockedWithInt:(jint)uid;

- (void)markNonBlockedWithInt:(jint)uid;

- (ARPromise *)unblockUserWithInt:(jint)uid;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesBlocklistBlockListModule)

FOUNDATION_EXPORT void ImActorCoreModulesBlocklistBlockListModule_initWithACModuleContext_(ImActorCoreModulesBlocklistBlockListModule *self, id<ACModuleContext> context);

FOUNDATION_EXPORT ImActorCoreModulesBlocklistBlockListModule *new_ImActorCoreModulesBlocklistBlockListModule_initWithACModuleContext_(id<ACModuleContext> context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesBlocklistBlockListModule *create_ImActorCoreModulesBlocklistBlockListModule_initWithACModuleContext_(id<ACModuleContext> context);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesBlocklistBlockListModule)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreModulesBlocklistBlockListModule")
