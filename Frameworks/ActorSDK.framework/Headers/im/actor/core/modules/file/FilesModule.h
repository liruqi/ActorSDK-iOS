//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/modules/file/FilesModule.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreModulesFileFilesModule")
#ifdef RESTRICT_ImActorCoreModulesFileFilesModule
#define INCLUDE_ALL_ImActorCoreModulesFileFilesModule 0
#else
#define INCLUDE_ALL_ImActorCoreModulesFileFilesModule 1
#endif
#undef RESTRICT_ImActorCoreModulesFileFilesModule

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorCoreModulesFileFilesModule_) && (INCLUDE_ALL_ImActorCoreModulesFileFilesModule || defined(INCLUDE_ImActorCoreModulesFileFilesModule))
#define ImActorCoreModulesFileFilesModule_

#define RESTRICT_ImActorCoreModulesAbsModule 1
#define INCLUDE_ACAbsModule 1
#include "../../../../../im/actor/core/modules/AbsModule.h"

@class ACFileReference;
@class ARActorRef;
@class ImActorCoreModulesFileFileUrlInt;
@protocol ACFileCallback;
@protocol ACFileEventCallback;
@protocol ACModuleContext;
@protocol ACUploadFileCallback;
@protocol ARKeyValueEngine;

@interface ImActorCoreModulesFileFilesModule : ACAbsModule

#pragma mark Public

- (instancetype)initWithACModuleContext:(id<ACModuleContext>)context;

- (void)bindFileWithACFileReference:(ACFileReference *)fileReference
                        withBoolean:(jboolean)isAutostart
                 withACFileCallback:(id<ACFileCallback>)callback;

- (void)bindUploadFileWithLong:(jlong)rid
      withACUploadFileCallback:(id<ACUploadFileCallback>)uploadFileCallback;

- (void)cancelDownloadingWithLong:(jlong)fileId;

- (void)cancelUploadWithLong:(jlong)rid;

- (NSString *)getDownloadedDescriptorWithLong:(jlong)fileId;

- (id<ARKeyValueEngine>)getDownloadedEngine;

- (ImActorCoreModulesFileFileUrlInt *)getFileUrlInt;

- (void)pauseUploadWithLong:(jlong)rid;

- (void)requestStateWithLong:(jlong)fileId
          withACFileCallback:(id<ACFileCallback>)callback;

- (void)requestUploadWithLong:(jlong)rid
                 withNSString:(NSString *)descriptor
                 withNSString:(NSString *)fileName
               withARActorRef:(ARActorRef *)requester;

- (void)requestUploadStateWithLong:(jlong)rid
          withACUploadFileCallback:(id<ACUploadFileCallback>)callback;

- (void)resetModule;

- (void)resumeUploadWithLong:(jlong)rid;

- (void)run;

- (void)startDownloadingWithACFileReference:(ACFileReference *)location;

- (void)subscribeWithACFileEventCallback:(id<ACFileEventCallback>)callback;

- (void)unbindFileWithLong:(jlong)fileId
        withACFileCallback:(id<ACFileCallback>)callback
               withBoolean:(jboolean)cancel;

- (void)unbindUploadFileWithLong:(jlong)rid
        withACUploadFileCallback:(id<ACUploadFileCallback>)callback;

- (void)unsubscribeWithACFileEventCallback:(id<ACFileEventCallback>)callback;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorCoreModulesFileFilesModule)

FOUNDATION_EXPORT void ImActorCoreModulesFileFilesModule_initWithACModuleContext_(ImActorCoreModulesFileFilesModule *self, id<ACModuleContext> context);

FOUNDATION_EXPORT ImActorCoreModulesFileFilesModule *new_ImActorCoreModulesFileFilesModule_initWithACModuleContext_(id<ACModuleContext> context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorCoreModulesFileFilesModule *create_ImActorCoreModulesFileFilesModule_initWithACModuleContext_(id<ACModuleContext> context);

J2OBJC_TYPE_LITERAL_HEADER(ImActorCoreModulesFileFilesModule)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreModulesFileFilesModule")
