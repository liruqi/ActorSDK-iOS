//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/core/core-shared/src/main/java/im/actor/core/AuthState.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorCoreAuthState")
#ifdef RESTRICT_ImActorCoreAuthState
#define INCLUDE_ALL_ImActorCoreAuthState 0
#else
#define INCLUDE_ALL_ImActorCoreAuthState 1
#endif
#undef RESTRICT_ImActorCoreAuthState

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ACAuthState_) && (INCLUDE_ALL_ImActorCoreAuthState || defined(INCLUDE_ACAuthState))
#define ACAuthState_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
@import j2objc;

typedef NS_ENUM(NSUInteger, ACAuthState_Enum) {
  ACAuthState_Enum_AUTH_START = 0,
  ACAuthState_Enum_AUTH_EMAIL = 1,
  ACAuthState_Enum_AUTH_PHONE = 2,
  ACAuthState_Enum_AUTH_CUSTOM = 3,
  ACAuthState_Enum_CODE_VALIDATION_PHONE = 4,
  ACAuthState_Enum_CODE_VALIDATION_EMAIL = 5,
  ACAuthState_Enum_PASSWORD_VALIDATION = 6,
  ACAuthState_Enum_GET_OAUTH_PARAMS = 7,
  ACAuthState_Enum_COMPLETE_OAUTH = 8,
  ACAuthState_Enum_SIGN_UP = 9,
  ACAuthState_Enum_LOGGED_IN = 10,
};

/*!
 @brief State of Authentication
 */
@interface ACAuthState : JavaLangEnum < NSCopying >

+ (ACAuthState *)AUTH_START;

+ (ACAuthState *)AUTH_EMAIL;

+ (ACAuthState *)AUTH_PHONE;

+ (ACAuthState *)AUTH_CUSTOM;

+ (ACAuthState *)CODE_VALIDATION_PHONE;

+ (ACAuthState *)CODE_VALIDATION_EMAIL;

+ (ACAuthState *)PASSWORD_VALIDATION;

+ (ACAuthState *)GET_OAUTH_PARAMS;

+ (ACAuthState *)COMPLETE_OAUTH;

+ (ACAuthState *)SIGN_UP;

+ (ACAuthState *)LOGGED_IN;

#pragma mark Package-Private

+ (IOSObjectArray *)values;

+ (ACAuthState *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;
- (ACAuthState_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(ACAuthState)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ACAuthState *ACAuthState_values_[];

inline ACAuthState *ACAuthState_get_AUTH_START();
J2OBJC_ENUM_CONSTANT(ACAuthState, AUTH_START)

inline ACAuthState *ACAuthState_get_AUTH_EMAIL();
J2OBJC_ENUM_CONSTANT(ACAuthState, AUTH_EMAIL)

inline ACAuthState *ACAuthState_get_AUTH_PHONE();
J2OBJC_ENUM_CONSTANT(ACAuthState, AUTH_PHONE)

inline ACAuthState *ACAuthState_get_AUTH_CUSTOM();
J2OBJC_ENUM_CONSTANT(ACAuthState, AUTH_CUSTOM)

inline ACAuthState *ACAuthState_get_CODE_VALIDATION_PHONE();
J2OBJC_ENUM_CONSTANT(ACAuthState, CODE_VALIDATION_PHONE)

inline ACAuthState *ACAuthState_get_CODE_VALIDATION_EMAIL();
J2OBJC_ENUM_CONSTANT(ACAuthState, CODE_VALIDATION_EMAIL)

inline ACAuthState *ACAuthState_get_PASSWORD_VALIDATION();
J2OBJC_ENUM_CONSTANT(ACAuthState, PASSWORD_VALIDATION)

inline ACAuthState *ACAuthState_get_GET_OAUTH_PARAMS();
J2OBJC_ENUM_CONSTANT(ACAuthState, GET_OAUTH_PARAMS)

inline ACAuthState *ACAuthState_get_COMPLETE_OAUTH();
J2OBJC_ENUM_CONSTANT(ACAuthState, COMPLETE_OAUTH)

inline ACAuthState *ACAuthState_get_SIGN_UP();
J2OBJC_ENUM_CONSTANT(ACAuthState, SIGN_UP)

inline ACAuthState *ACAuthState_get_LOGGED_IN();
J2OBJC_ENUM_CONSTANT(ACAuthState, LOGGED_IN)

FOUNDATION_EXPORT IOSObjectArray *ACAuthState_values();

FOUNDATION_EXPORT ACAuthState *ACAuthState_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ACAuthState *ACAuthState_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ACAuthState)

@compatibility_alias ImActorCoreAuthState ACAuthState;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorCoreAuthState")
