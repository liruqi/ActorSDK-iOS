//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/runtime/runtime-cocoa/src/main/java/im/actor/runtime/cocoa/CocoaLifecycleProxyProvider.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorRuntimeCocoaCocoaLifecycleProxyProvider")
#ifdef RESTRICT_ImActorRuntimeCocoaCocoaLifecycleProxyProvider
#define INCLUDE_ALL_ImActorRuntimeCocoaCocoaLifecycleProxyProvider 0
#else
#define INCLUDE_ALL_ImActorRuntimeCocoaCocoaLifecycleProxyProvider 1
#endif
#undef RESTRICT_ImActorRuntimeCocoaCocoaLifecycleProxyProvider

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARCocoaLifecycleProxyProvider_) && (INCLUDE_ALL_ImActorRuntimeCocoaCocoaLifecycleProxyProvider || defined(INCLUDE_ARCocoaLifecycleProxyProvider))
#define ARCocoaLifecycleProxyProvider_

#define RESTRICT_ImActorRuntimeLifecycleRuntime 1
#define INCLUDE_ARLifecycleRuntime 1
#include "../../../../im/actor/runtime/LifecycleRuntime.h"

@protocol ARWakeLock;

@interface ARCocoaLifecycleProxyProvider : NSObject < ARLifecycleRuntime >

#pragma mark Public

- (instancetype)init;

- (void)killApp;

- (id<ARWakeLock>)makeWakeLock;

+ (void)setLifecycleRuntime:(id<ARLifecycleRuntime>)lifecycleRuntime;

@end

J2OBJC_EMPTY_STATIC_INIT(ARCocoaLifecycleProxyProvider)

FOUNDATION_EXPORT void ARCocoaLifecycleProxyProvider_setLifecycleRuntime_(id<ARLifecycleRuntime> lifecycleRuntime);

FOUNDATION_EXPORT void ARCocoaLifecycleProxyProvider_init(ARCocoaLifecycleProxyProvider *self);

FOUNDATION_EXPORT ARCocoaLifecycleProxyProvider *new_ARCocoaLifecycleProxyProvider_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARCocoaLifecycleProxyProvider *create_ARCocoaLifecycleProxyProvider_init();

J2OBJC_TYPE_LITERAL_HEADER(ARCocoaLifecycleProxyProvider)

@compatibility_alias ImActorRuntimeCocoaCocoaLifecycleProxyProvider ARCocoaLifecycleProxyProvider;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorRuntimeCocoaCocoaLifecycleProxyProvider")
