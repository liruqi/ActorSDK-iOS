//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/runtime/runtime-generic/src/main/java/im/actor/runtime/generic/GenericRandomProvider.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorRuntimeGenericGenericRandomProvider")
#ifdef RESTRICT_ImActorRuntimeGenericGenericRandomProvider
#define INCLUDE_ALL_ImActorRuntimeGenericGenericRandomProvider 0
#else
#define INCLUDE_ALL_ImActorRuntimeGenericGenericRandomProvider 1
#endif
#undef RESTRICT_ImActorRuntimeGenericGenericRandomProvider

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARGenericRandomProvider_) && (INCLUDE_ALL_ImActorRuntimeGenericGenericRandomProvider || defined(INCLUDE_ARGenericRandomProvider))
#define ARGenericRandomProvider_

#define RESTRICT_ImActorRuntimeRandomRuntime 1
#define INCLUDE_ARRandomRuntime 1
#include "../../../../im/actor/runtime/RandomRuntime.h"

@class IOSByteArray;
@class JavaMathBigInteger;

/*!
 @brief Created by ex3ndr on 07.08.15.
 */
@interface ARGenericRandomProvider : NSObject < ARRandomRuntime >

#pragma mark Public

- (instancetype)init;

- (JavaMathBigInteger *)generateBigIntegerWithInt:(jint)numBits;

- (JavaMathBigInteger *)generateBigIntegerWithInt:(jint)numBits
                                          withInt:(jint)certanity;

- (void)nextBytesWithByteArray:(IOSByteArray *)data;

- (IOSByteArray *)randomBytesWithInt:(jint)length;

- (jint)randomIntWithInt:(jint)maxValue;

- (jlong)randomLong;

@end

J2OBJC_EMPTY_STATIC_INIT(ARGenericRandomProvider)

FOUNDATION_EXPORT void ARGenericRandomProvider_init(ARGenericRandomProvider *self);

FOUNDATION_EXPORT ARGenericRandomProvider *new_ARGenericRandomProvider_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARGenericRandomProvider *create_ARGenericRandomProvider_init();

J2OBJC_TYPE_LITERAL_HEADER(ARGenericRandomProvider)

@compatibility_alias ImActorRuntimeGenericGenericRandomProvider ARGenericRandomProvider;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorRuntimeGenericGenericRandomProvider")
