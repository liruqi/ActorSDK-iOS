//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java/im/actor/runtime/actors/Actor.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorRuntimeActorsActor")
#ifdef RESTRICT_ImActorRuntimeActorsActor
#define INCLUDE_ALL_ImActorRuntimeActorsActor 0
#else
#define INCLUDE_ALL_ImActorRuntimeActorsActor 1
#endif
#undef RESTRICT_ImActorRuntimeActorsActor

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARActor_) && (INCLUDE_ALL_ImActorRuntimeActorsActor || defined(INCLUDE_ARActor))
#define ARActor_

@class ARActorContext;
@class ARActorRef;
@class ARActorSystem;
@class ImActorRuntimeActorsDispatchMailbox;
@class JavaLangException;
@protocol ARCancellable;
@protocol ARReceiver;
@protocol ARSimpleDispatcher;

/*!
 @brief Actor object
 */
@interface ARActor : NSObject

#pragma mark Public

- (instancetype)init;

- (void)becomeWithARReceiver:(id<ARReceiver>)receiver;

/*!
 @brief Dropping of message
 @param message message for dropping
 */
- (void)dropWithId:(id)message;

- (void)forwardWithARActorRef:(ARActorRef *)dest;

/*!
 @brief <p>INTERNAL API</p>
 */
- (id<ARSimpleDispatcher>)getDispatcher;

/*!
 @brief Actor mailbox
 @return mailbox
 */
- (ImActorRuntimeActorsDispatchMailbox *)getMailbox;

- (void)haltWithNSString:(NSString *)message;

- (void)haltWithNSString:(NSString *)message
   withJavaLangException:(JavaLangException *)e;

/*!
 @brief <p>INTERNAL API</p>
 Handling of a message in Actor
 @param message message
 */
- (void)handleMessageWithId:(id)message
             withARActorRef:(ARActorRef *)sender;

/*!
 @brief <p>INTERNAL API</p>
 Initialization of actor
 @param path    path of actor
 @param context context of actor
 @param mailbox mailbox of actor
 */
- (void)initActorWithNSString:(NSString *)path
           withARActorContext:(ARActorContext *)context
withImActorRuntimeActorsDispatchMailbox:(ImActorRuntimeActorsDispatchMailbox *)mailbox OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Receiving of message
 @param message message
 */
- (void)onReceiveWithId:(id)message;

/*!
 @brief Called after actor shutdown
 */
- (void)postStop;

/*!
 @brief Called before first message receiving
 */
- (void)preStart;

/*!
 @brief Reply message to sender of last message
 @param message reply message
 */
- (void)replyWithId:(id)message;

- (id<ARCancellable>)scheduleWithId:(id)obj
                           withLong:(jlong)delay;

/*!
 @brief Self actor reference
 @return self reference
 */
- (ARActorRef *)self__;

/*!
 @brief Sender of last received message
 @return sender's ActorRef
 */
- (ARActorRef *)sender;

- (void)stash;

- (void)stashWithInt:(jint)index;

/*!
 @brief Actor System
 @return Actor System
 */
- (ARActorSystem *)system;

- (void)unbecome;

- (void)unstashAll;

- (void)unstashAllWithInt:(jint)index;

#pragma mark Protected

/*!
 @brief Actor path
 @return path
 */
- (NSString *)getPath;

@end

J2OBJC_EMPTY_STATIC_INIT(ARActor)

FOUNDATION_EXPORT void ARActor_init(ARActor *self);

FOUNDATION_EXPORT ARActor *new_ARActor_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARActor *create_ARActor_init();

J2OBJC_TYPE_LITERAL_HEADER(ARActor)

@compatibility_alias ImActorRuntimeActorsActor ARActor;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorRuntimeActorsActor")
