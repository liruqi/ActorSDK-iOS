//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java/im/actor/runtime/actors/dispatch/Mailbox.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorRuntimeActorsDispatchMailbox")
#ifdef RESTRICT_ImActorRuntimeActorsDispatchMailbox
#define INCLUDE_ALL_ImActorRuntimeActorsDispatchMailbox 0
#else
#define INCLUDE_ALL_ImActorRuntimeActorsDispatchMailbox 1
#endif
#undef RESTRICT_ImActorRuntimeActorsDispatchMailbox

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorRuntimeActorsDispatchMailbox_) && (INCLUDE_ALL_ImActorRuntimeActorsDispatchMailbox || defined(INCLUDE_ImActorRuntimeActorsDispatchMailbox))
#define ImActorRuntimeActorsDispatchMailbox_

@class IOSObjectArray;
@class ImActorRuntimeActorsDispatchEnvelope;
@class ImActorRuntimeActorsDispatchQueueQueueCollection;

/*!
 @brief Actor mailbox, queue of envelopes.
 */
@interface ImActorRuntimeActorsDispatchMailbox : NSObject

#pragma mark Public

/*!
 @brief Creating mailbox
 @param queueCollection Queue Collection of envelopes
 */
- (instancetype)initWithImActorRuntimeActorsDispatchQueueQueueCollection:(ImActorRuntimeActorsDispatchQueueQueueCollection *)queueCollection;

- (IOSObjectArray *)dispose;

/*!
 @brief Send envelope at time
 @param envelope envelope
 */
- (void)scheduleWithImActorRuntimeActorsDispatchEnvelope:(ImActorRuntimeActorsDispatchEnvelope *)envelope;

/*!
 @brief Send envelope first
 @param envelope envelope
 */
- (void)scheduleFirstWithImActorRuntimeActorsDispatchEnvelope:(ImActorRuntimeActorsDispatchEnvelope *)envelope;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorRuntimeActorsDispatchMailbox)

FOUNDATION_EXPORT void ImActorRuntimeActorsDispatchMailbox_initWithImActorRuntimeActorsDispatchQueueQueueCollection_(ImActorRuntimeActorsDispatchMailbox *self, ImActorRuntimeActorsDispatchQueueQueueCollection *queueCollection);

FOUNDATION_EXPORT ImActorRuntimeActorsDispatchMailbox *new_ImActorRuntimeActorsDispatchMailbox_initWithImActorRuntimeActorsDispatchQueueQueueCollection_(ImActorRuntimeActorsDispatchQueueQueueCollection *queueCollection) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorRuntimeActorsDispatchMailbox *create_ImActorRuntimeActorsDispatchMailbox_initWithImActorRuntimeActorsDispatchQueueQueueCollection_(ImActorRuntimeActorsDispatchQueueQueueCollection *queueCollection);

J2OBJC_TYPE_LITERAL_HEADER(ImActorRuntimeActorsDispatchMailbox)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorRuntimeActorsDispatchMailbox")
