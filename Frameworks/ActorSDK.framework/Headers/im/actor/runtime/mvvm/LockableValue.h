//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java/im/actor/runtime/mvvm/LockableValue.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorRuntimeMvvmLockableValue")
#ifdef RESTRICT_ImActorRuntimeMvvmLockableValue
#define INCLUDE_ALL_ImActorRuntimeMvvmLockableValue 0
#else
#define INCLUDE_ALL_ImActorRuntimeMvvmLockableValue 1
#endif
#undef RESTRICT_ImActorRuntimeMvvmLockableValue

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ARLockableValue_) && (INCLUDE_ALL_ImActorRuntimeMvvmLockableValue || defined(INCLUDE_ARLockableValue))
#define ARLockableValue_

#define RESTRICT_ImActorRuntimeMvvmValue 1
#define INCLUDE_ARValue 1
#include "../../../../im/actor/runtime/mvvm/Value.h"

@interface ARLockableValue : ARValue

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
                     withARValue:(ARValue *)baseValue;

/*!
 @brief Can be executed only between create/release lock calls
 */
- (void)changeWithId:(id)obj;

- (jint)createLock;

- (void)destroy;

- (id)get;

- (void)releaseLockWithInt:(jint)id_;

#pragma mark Protected

- (id)getModifiedValue;

@end

J2OBJC_EMPTY_STATIC_INIT(ARLockableValue)

FOUNDATION_EXPORT void ARLockableValue_initWithNSString_withARValue_(ARLockableValue *self, NSString *name, ARValue *baseValue);

FOUNDATION_EXPORT ARLockableValue *new_ARLockableValue_initWithNSString_withARValue_(NSString *name, ARValue *baseValue) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ARLockableValue *create_ARLockableValue_initWithNSString_withARValue_(NSString *name, ARValue *baseValue);

J2OBJC_TYPE_LITERAL_HEADER(ARLockableValue)

@compatibility_alias ImActorRuntimeMvvmLockableValue ARLockableValue;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorRuntimeMvvmLockableValue")
