//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java/im/actor/runtime/crypto/box/ActorBox.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorRuntimeCryptoBoxActorBox")
#ifdef RESTRICT_ImActorRuntimeCryptoBoxActorBox
#define INCLUDE_ALL_ImActorRuntimeCryptoBoxActorBox 0
#else
#define INCLUDE_ALL_ImActorRuntimeCryptoBoxActorBox 1
#endif
#undef RESTRICT_ImActorRuntimeCryptoBoxActorBox

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorRuntimeCryptoBoxActorBox_) && (INCLUDE_ALL_ImActorRuntimeCryptoBoxActorBox || defined(INCLUDE_ImActorRuntimeCryptoBoxActorBox))
#define ImActorRuntimeCryptoBoxActorBox_

@class IOSByteArray;
@class ImActorRuntimeCryptoBoxActorBoxKey;

/*!
 @brief Encrypted Actor Box.
 Encrypted and HMACed with AES-128-CBC-HMAC-SHA256 and then again
 with Kuznechik-128-CBC-HMAC-Streebog256. Cipher Text is padded with PKCS#7.
 @author Steve Kite (steve@@actor.im)
 */
@interface ImActorRuntimeCryptoBoxActorBox : NSObject

#pragma mark Public

- (instancetype)init;

/*!
 @brief Closing encrypted box
 @param header    plain-text header of a box
 @param plainText plain-text content
 @param random32  32 random bytes
 @param key       Box key
 @return encrypted context
 @throws IntegrityException
 */
+ (IOSByteArray *)closeBoxWithByteArray:(IOSByteArray *)header
                          withByteArray:(IOSByteArray *)plainText
                          withByteArray:(IOSByteArray *)random32
 withImActorRuntimeCryptoBoxActorBoxKey:(ImActorRuntimeCryptoBoxActorBoxKey *)key;

/*!
 @brief Opening Encrypted box
 @param header     plain-text header of a box
 @param cipherText encrypted content
 @param key        Box key
 @return plain-text content
 @throws IntegrityException
 */
+ (IOSByteArray *)openBoxWithByteArray:(IOSByteArray *)header
                         withByteArray:(IOSByteArray *)cipherText
withImActorRuntimeCryptoBoxActorBoxKey:(ImActorRuntimeCryptoBoxActorBoxKey *)key;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorRuntimeCryptoBoxActorBox)

FOUNDATION_EXPORT IOSByteArray *ImActorRuntimeCryptoBoxActorBox_openBoxWithByteArray_withByteArray_withImActorRuntimeCryptoBoxActorBoxKey_(IOSByteArray *header, IOSByteArray *cipherText, ImActorRuntimeCryptoBoxActorBoxKey *key);

FOUNDATION_EXPORT IOSByteArray *ImActorRuntimeCryptoBoxActorBox_closeBoxWithByteArray_withByteArray_withByteArray_withImActorRuntimeCryptoBoxActorBoxKey_(IOSByteArray *header, IOSByteArray *plainText, IOSByteArray *random32, ImActorRuntimeCryptoBoxActorBoxKey *key);

FOUNDATION_EXPORT void ImActorRuntimeCryptoBoxActorBox_init(ImActorRuntimeCryptoBoxActorBox *self);

FOUNDATION_EXPORT ImActorRuntimeCryptoBoxActorBox *new_ImActorRuntimeCryptoBoxActorBox_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorRuntimeCryptoBoxActorBox *create_ImActorRuntimeCryptoBoxActorBox_init();

J2OBJC_TYPE_LITERAL_HEADER(ImActorRuntimeCryptoBoxActorBox)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorRuntimeCryptoBoxActorBox")
