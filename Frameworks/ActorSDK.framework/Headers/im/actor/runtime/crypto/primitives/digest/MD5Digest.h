//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java/im/actor/runtime/crypto/primitives/digest/MD5Digest.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesDigestMD5Digest")
#ifdef RESTRICT_ImActorRuntimeCryptoPrimitivesDigestMD5Digest
#define INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesDigestMD5Digest 0
#else
#define INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesDigestMD5Digest 1
#endif
#undef RESTRICT_ImActorRuntimeCryptoPrimitivesDigestMD5Digest

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorRuntimeCryptoPrimitivesDigestMD5Digest_) && (INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesDigestMD5Digest || defined(INCLUDE_ImActorRuntimeCryptoPrimitivesDigestMD5Digest))
#define ImActorRuntimeCryptoPrimitivesDigestMD5Digest_

#define RESTRICT_ImActorRuntimeCryptoPrimitivesDigestGeneralDigest 1
#define INCLUDE_ImActorRuntimeCryptoPrimitivesDigestGeneralDigest 1
#include "../../../../../../im/actor/runtime/crypto/primitives/digest/GeneralDigest.h"

@class IOSByteArray;

/*!
 @brief implementation of MD5 as outlined in "Handbook of Applied Cryptography", pages 346 - 347.
 */
@interface ImActorRuntimeCryptoPrimitivesDigestMD5Digest : ImActorRuntimeCryptoPrimitivesDigestGeneralDigest

#pragma mark Public

/*!
 @brief Standard constructor
 */
- (instancetype)init;

/*!
 @brief Copy constructor.
 This will copy the state of the provided
 message digest.
 */
- (instancetype)initWithImActorRuntimeCryptoPrimitivesDigestMD5Digest:(ImActorRuntimeCryptoPrimitivesDigestMD5Digest *)t;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getDigestSize;

/*!
 @brief reset the chaining variables to the IV values.
 */
- (void)reset;

#pragma mark Protected

- (void)processBlock;

- (void)processLengthWithLong:(jlong)bitLength;

- (void)processWordWithByteArray:(IOSByteArray *)inArg
                         withInt:(jint)inOff;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorRuntimeCryptoPrimitivesDigestMD5Digest)

FOUNDATION_EXPORT void ImActorRuntimeCryptoPrimitivesDigestMD5Digest_init(ImActorRuntimeCryptoPrimitivesDigestMD5Digest *self);

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesDigestMD5Digest *new_ImActorRuntimeCryptoPrimitivesDigestMD5Digest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesDigestMD5Digest *create_ImActorRuntimeCryptoPrimitivesDigestMD5Digest_init();

FOUNDATION_EXPORT void ImActorRuntimeCryptoPrimitivesDigestMD5Digest_initWithImActorRuntimeCryptoPrimitivesDigestMD5Digest_(ImActorRuntimeCryptoPrimitivesDigestMD5Digest *self, ImActorRuntimeCryptoPrimitivesDigestMD5Digest *t);

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesDigestMD5Digest *new_ImActorRuntimeCryptoPrimitivesDigestMD5Digest_initWithImActorRuntimeCryptoPrimitivesDigestMD5Digest_(ImActorRuntimeCryptoPrimitivesDigestMD5Digest *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesDigestMD5Digest *create_ImActorRuntimeCryptoPrimitivesDigestMD5Digest_initWithImActorRuntimeCryptoPrimitivesDigestMD5Digest_(ImActorRuntimeCryptoPrimitivesDigestMD5Digest *t);

J2OBJC_TYPE_LITERAL_HEADER(ImActorRuntimeCryptoPrimitivesDigestMD5Digest)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesDigestMD5Digest")
