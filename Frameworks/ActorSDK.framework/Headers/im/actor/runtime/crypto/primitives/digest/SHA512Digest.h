//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java/im/actor/runtime/crypto/primitives/digest/SHA512Digest.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest")
#ifdef RESTRICT_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest
#define INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest 0
#else
#define INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest 1
#endif
#undef RESTRICT_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorRuntimeCryptoPrimitivesDigestSHA512Digest_) && (INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest || defined(INCLUDE_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest))
#define ImActorRuntimeCryptoPrimitivesDigestSHA512Digest_

#define RESTRICT_ImActorRuntimeCryptoPrimitivesDigestLongDigest 1
#define INCLUDE_ImActorRuntimeCryptoPrimitivesDigestLongDigest 1
#include "../../../../../../im/actor/runtime/crypto/primitives/digest/LongDigest.h"

@class IOSByteArray;

/*!
 @brief FIPS 180-2 implementation of SHA-512.
 <p>
 @code

         block  word  digest
  SHA-1   512    32    160
  SHA-256 512    32    256
  SHA-384 1024   64    384
  SHA-512 1024   64    512
  
@endcode
 */
@interface ImActorRuntimeCryptoPrimitivesDigestSHA512Digest : ImActorRuntimeCryptoPrimitivesDigestLongDigest

#pragma mark Public

/*!
 @brief Standard constructor
 */
- (instancetype)init;

- (instancetype)initWithByteArray:(IOSByteArray *)encodedState;

/*!
 @brief Copy constructor.
 This will copy the state of the provided
 message digest.
 */
- (instancetype)initWithImActorRuntimeCryptoPrimitivesDigestSHA512Digest:(ImActorRuntimeCryptoPrimitivesDigestSHA512Digest *)t;

- (jint)doFinalWithByteArray:(IOSByteArray *)outArg
                     withInt:(jint)outOff;

- (NSString *)getAlgorithmName;

- (jint)getDigestSize;

/*!
 @brief reset the chaining variables
 */
- (void)reset;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorRuntimeCryptoPrimitivesDigestSHA512Digest)

FOUNDATION_EXPORT void ImActorRuntimeCryptoPrimitivesDigestSHA512Digest_init(ImActorRuntimeCryptoPrimitivesDigestSHA512Digest *self);

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesDigestSHA512Digest *new_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesDigestSHA512Digest *create_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest_init();

FOUNDATION_EXPORT void ImActorRuntimeCryptoPrimitivesDigestSHA512Digest_initWithImActorRuntimeCryptoPrimitivesDigestSHA512Digest_(ImActorRuntimeCryptoPrimitivesDigestSHA512Digest *self, ImActorRuntimeCryptoPrimitivesDigestSHA512Digest *t);

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesDigestSHA512Digest *new_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest_initWithImActorRuntimeCryptoPrimitivesDigestSHA512Digest_(ImActorRuntimeCryptoPrimitivesDigestSHA512Digest *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesDigestSHA512Digest *create_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest_initWithImActorRuntimeCryptoPrimitivesDigestSHA512Digest_(ImActorRuntimeCryptoPrimitivesDigestSHA512Digest *t);

FOUNDATION_EXPORT void ImActorRuntimeCryptoPrimitivesDigestSHA512Digest_initWithByteArray_(ImActorRuntimeCryptoPrimitivesDigestSHA512Digest *self, IOSByteArray *encodedState);

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesDigestSHA512Digest *new_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest_initWithByteArray_(IOSByteArray *encodedState) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesDigestSHA512Digest *create_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest_initWithByteArray_(IOSByteArray *encodedState);

J2OBJC_TYPE_LITERAL_HEADER(ImActorRuntimeCryptoPrimitivesDigestSHA512Digest)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesDigestSHA512Digest")
