//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java/im/actor/runtime/crypto/primitives/kuznechik/KuznechikTables.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables")
#ifdef RESTRICT_ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables
#define INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables 0
#else
#define INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables 1
#endif
#undef RESTRICT_ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_) && (INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables || defined(INCLUDE_ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables))
#define ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_

@class IOSByteArray;

/*!
 @brief Lookup tables for Kuznechik encryption
 <p>
 Ported by Steven Kite (steve@@actor.im) from
 https://github.com/mjosaarinen/kuznechik/blob/master/kuznechik_8bit.c
 */
@interface ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables : NSObject

+ (IOSByteArray *)kuz_pi;

+ (IOSByteArray *)kuz_pi_inv;

+ (IOSByteArray *)kuz_lvec;

+ (IOSByteArray *)gf256_E;

+ (IOSByteArray *)gf256_L;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables)

inline IOSByteArray *ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_get_kuz_pi();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_kuz_pi;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables, kuz_pi, IOSByteArray *)

inline IOSByteArray *ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_get_kuz_pi_inv();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_kuz_pi_inv;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables, kuz_pi_inv, IOSByteArray *)

inline IOSByteArray *ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_get_kuz_lvec();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_kuz_lvec;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables, kuz_lvec, IOSByteArray *)

inline IOSByteArray *ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_get_gf256_E();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_gf256_E;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables, gf256_E, IOSByteArray *)

inline IOSByteArray *ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_get_gf256_L();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_gf256_L;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables, gf256_L, IOSByteArray *)

FOUNDATION_EXPORT void ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_init(ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables *self);

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables *new_ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables *create_ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables_init();

J2OBJC_TYPE_LITERAL_HEADER(ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesKuznechikKuznechikTables")
