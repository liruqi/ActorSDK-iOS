//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java/im/actor/runtime/crypto/primitives/modes/CBCBlockCipher.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher")
#ifdef RESTRICT_ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher
#define INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher 0
#else
#define INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher 1
#endif
#undef RESTRICT_ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher_) && (INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher || defined(INCLUDE_ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher))
#define ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher_

@class IOSByteArray;
@protocol ARBlockCipher;

/*!
 @brief CBC Cipher implementation
 by Steve Kite (steve@@actor.im)
 */
@interface ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher : NSObject

#pragma mark Public

/*!
 @brief Constructing block cipher
 @param blockCipher Underlying block cipher
 */
- (instancetype)initWithARBlockCipher:(id<ARBlockCipher>)blockCipher;

/*!
 @brief Decrypting data
 @param iv   initialization vector
 @param data data for decryption
 @return decrypted data
 */
- (IOSByteArray *)decryptWithByteArray:(IOSByteArray *)iv
                         withByteArray:(IOSByteArray *)data;

/*!
 @brief Encrypting data
 @param iv   initialization vector
 @param data data for encryption
 @return encrypted data
 */
- (IOSByteArray *)encryptWithByteArray:(IOSByteArray *)iv
                         withByteArray:(IOSByteArray *)data;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher)

FOUNDATION_EXPORT void ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher_initWithARBlockCipher_(ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher *self, id<ARBlockCipher> blockCipher);

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher *new_ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher_initWithARBlockCipher_(id<ARBlockCipher> blockCipher) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher *create_ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher_initWithARBlockCipher_(id<ARBlockCipher> blockCipher);

J2OBJC_TYPE_LITERAL_HEADER(ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesModesCBCBlockCipher")
