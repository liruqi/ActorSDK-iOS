//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java/im/actor/runtime/crypto/primitives/curve25519/ge_scalarmult_base.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesCurve25519Ge_scalarmult_base")
#ifdef RESTRICT_ImActorRuntimeCryptoPrimitivesCurve25519Ge_scalarmult_base
#define INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesCurve25519Ge_scalarmult_base 0
#else
#define INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesCurve25519Ge_scalarmult_base 1
#endif
#undef RESTRICT_ImActorRuntimeCryptoPrimitivesCurve25519Ge_scalarmult_base

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base_) && (INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesCurve25519Ge_scalarmult_base || defined(INCLUDE_ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base))
#define ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base_

@class IOSByteArray;
@class ImActorRuntimeCryptoPrimitivesCurve25519ge_p3;
@class ImActorRuntimeCryptoPrimitivesCurve25519ge_precomp;

@interface ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)ge_scalarmult_baseWithImActorRuntimeCryptoPrimitivesCurve25519ge_p3:(ImActorRuntimeCryptoPrimitivesCurve25519ge_p3 *)h
                                                              withByteArray:(IOSByteArray *)a;

#pragma mark Package-Private

+ (void)cmovWithImActorRuntimeCryptoPrimitivesCurve25519ge_precomp:(ImActorRuntimeCryptoPrimitivesCurve25519ge_precomp *)t
            withImActorRuntimeCryptoPrimitivesCurve25519ge_precomp:(ImActorRuntimeCryptoPrimitivesCurve25519ge_precomp *)u
                                                           withInt:(jint)b;

+ (jint)equalWithByte:(jbyte)b
             withByte:(jbyte)c;

+ (jint)negativeWithByte:(jbyte)b;

+ (void)selectWithImActorRuntimeCryptoPrimitivesCurve25519ge_precomp:(ImActorRuntimeCryptoPrimitivesCurve25519ge_precomp *)t
                                                             withInt:(jint)pos
                                                            withByte:(jbyte)b;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base)

FOUNDATION_EXPORT jint ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base_equalWithByte_withByte_(jbyte b, jbyte c);

FOUNDATION_EXPORT jint ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base_negativeWithByte_(jbyte b);

FOUNDATION_EXPORT void ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base_cmovWithImActorRuntimeCryptoPrimitivesCurve25519ge_precomp_withImActorRuntimeCryptoPrimitivesCurve25519ge_precomp_withInt_(ImActorRuntimeCryptoPrimitivesCurve25519ge_precomp *t, ImActorRuntimeCryptoPrimitivesCurve25519ge_precomp *u, jint b);

FOUNDATION_EXPORT void ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base_selectWithImActorRuntimeCryptoPrimitivesCurve25519ge_precomp_withInt_withByte_(ImActorRuntimeCryptoPrimitivesCurve25519ge_precomp *t, jint pos, jbyte b);

FOUNDATION_EXPORT void ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base_ge_scalarmult_baseWithImActorRuntimeCryptoPrimitivesCurve25519ge_p3_withByteArray_(ImActorRuntimeCryptoPrimitivesCurve25519ge_p3 *h, IOSByteArray *a);

FOUNDATION_EXPORT void ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base_init(ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base *self);

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base *new_ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base *create_ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base_init();

J2OBJC_TYPE_LITERAL_HEADER(ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base)

@compatibility_alias ImActorRuntimeCryptoPrimitivesCurve25519Ge_scalarmult_base ImActorRuntimeCryptoPrimitivesCurve25519ge_scalarmult_base;

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorRuntimeCryptoPrimitivesCurve25519Ge_scalarmult_base")
