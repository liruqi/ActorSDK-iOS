//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/liruqi/Documents/github/actor-platform/actor-sdk/sdk-core/runtime/runtime-shared/src/main/java/im/actor/runtime/crypto/ratchet/RatchetKeySignature.java
//

@import j2objc;

#pragma push_macro("INCLUDE_ALL_ImActorRuntimeCryptoRatchetRatchetKeySignature")
#ifdef RESTRICT_ImActorRuntimeCryptoRatchetRatchetKeySignature
#define INCLUDE_ALL_ImActorRuntimeCryptoRatchetRatchetKeySignature 0
#else
#define INCLUDE_ALL_ImActorRuntimeCryptoRatchetRatchetKeySignature 1
#endif
#undef RESTRICT_ImActorRuntimeCryptoRatchetRatchetKeySignature

#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"

#if !defined (ImActorRuntimeCryptoRatchetRatchetKeySignature_) && (INCLUDE_ALL_ImActorRuntimeCryptoRatchetRatchetKeySignature || defined(INCLUDE_ImActorRuntimeCryptoRatchetRatchetKeySignature))
#define ImActorRuntimeCryptoRatchetRatchetKeySignature_

@class IOSByteArray;

@interface ImActorRuntimeCryptoRatchetRatchetKeySignature : NSObject

#pragma mark Public

- (instancetype)init;

+ (IOSByteArray *)hashForSignatureWithLong:(jlong)keyId
                              withNSString:(NSString *)keyAlg
                             withByteArray:(IOSByteArray *)publicKey;

@end

J2OBJC_EMPTY_STATIC_INIT(ImActorRuntimeCryptoRatchetRatchetKeySignature)

FOUNDATION_EXPORT IOSByteArray *ImActorRuntimeCryptoRatchetRatchetKeySignature_hashForSignatureWithLong_withNSString_withByteArray_(jlong keyId, NSString *keyAlg, IOSByteArray *publicKey);

FOUNDATION_EXPORT void ImActorRuntimeCryptoRatchetRatchetKeySignature_init(ImActorRuntimeCryptoRatchetRatchetKeySignature *self);

FOUNDATION_EXPORT ImActorRuntimeCryptoRatchetRatchetKeySignature *new_ImActorRuntimeCryptoRatchetRatchetKeySignature_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ImActorRuntimeCryptoRatchetRatchetKeySignature *create_ImActorRuntimeCryptoRatchetRatchetKeySignature_init();

J2OBJC_TYPE_LITERAL_HEADER(ImActorRuntimeCryptoRatchetRatchetKeySignature)

#endif


#pragma clang diagnostic pop
#pragma pop_macro("INCLUDE_ALL_ImActorRuntimeCryptoRatchetRatchetKeySignature")
